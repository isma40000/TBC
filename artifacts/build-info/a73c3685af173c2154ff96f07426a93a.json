{
	"id": "a73c3685af173c2154ff96f07426a93a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"IQuadraticVoting.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./UCMToken.sol\";\nimport \"./IExecutableProposal.sol\";\n\ninterface IQuadraticVoting {\n\n    event OpenVote();\n    event CanWithdrawnFromProposal(uint proposalId);\n    event ClosedVote();\n\n    struct Proposal {\n        address owner;\n        IExecutableProposal executableProposal;\n        address proposal;\n        string title;\n        string description;\n        uint minBudget; //Amount in Ether\n        uint currentVotes;\n        uint currentTokens;\n        mapping(address => uint) votes;\n        uint8 state; // 0 -> enabled, 1 -> disabled, 2 -> aprobed\n    }\n\n    function openVoting() external payable;\n    function addParticipant() external payable;\n    function addProposal(string calldata title, string calldata description, uint minBudget, address executableProposal) external returns(uint);\n    function cancelProposal(uint id) external;\n    function buyTokens() external payable;\n    function sellTokens(uint amount) external;\n    function getERC20() view external returns(UCMToken);\n    function getPendingProposals() view external returns(uint[] memory);\n    function getApprovedProposals() view external returns(uint[] memory);\n    function getSignalingProposals() view external returns(uint[] memory);\n    function stake(uint id, uint votes) external;\n    function withdrawFromProposal(uint amount, uint id) external;\n    function closeVoting() external payable;\n    function executeSignaling(uint id) external;\n}"
			},
			"IExecutableProposal.sol": {
				"content": "pragma solidity ^0.5.0;\n\ninterface IExecutableProposal {\n    function executeProposal(uint proposalId, uint numVotes, uint numTokens) external payable;\n}"
			},
			"UCMToken.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./openzeppelin/ERC20.sol\";\nimport \"./openzeppelin/ERC20Detailed.sol\";\nimport \"./openzeppelin/roles/MinterRole.sol\";\n\ncontract UCMToken is ERC20, ERC20Detailed, MinterRole {\n\n    address private owner;\n\n    constructor() ERC20Detailed(\"UCM\", \"UCM\", 0) public {\n        owner = msg.sender;\n    }\n\n    function mint(address account, uint amount) external onlyMinter {\n        _mint(account, amount);\n    }\n\n    function burn(address account, uint amount) external onlyMinter {\n        _burn(account, amount);\n    }\n\n    function stakeTransfer(address stakeOwner, uint amount) external onlyMinter {\n        _transfer(stakeOwner, owner, amount);\n    }\n\n    modifier checkOwner() {\n        require(msg.sender == owner, \"Unauthorized\");\n        _;\n    }\n}"
			},
			"openzeppelin/roles/MinterRole.sol": {
				"content": "// https://github.com/Creepybits/openzeppelin/blob/main/contracts/access/roles/MinterRole.sol\npragma solidity ^0.5.0;\n\nimport \"../GSN/Context.sol\";\nimport \"./Roles.sol\";\n\ncontract MinterRole is Context {\n    using Roles for Roles.Role;\n\n    event MinterAdded(address indexed account);\n    event MinterRemoved(address indexed account);\n\n    Roles.Role private _minters;\n\n    constructor () internal {\n        _addMinter(_msgSender());\n    }\n\n    modifier onlyMinter() {\n        require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\");\n        _;\n    }\n\n    function isMinter(address account) public view returns (bool) {\n        return _minters.has(account);\n    }\n\n    function addMinter(address account) public onlyMinter {\n        _addMinter(account);\n    }\n\n    function renounceMinter() public {\n        _removeMinter(_msgSender());\n    }\n\n    function _addMinter(address account) internal {\n        _minters.add(account);\n        emit MinterAdded(account);\n    }\n\n    function _removeMinter(address account) internal {\n        _minters.remove(account);\n        emit MinterRemoved(account);\n    }\n}"
			},
			"openzeppelin/ERC20Detailed.sol": {
				"content": "// https://github.com/Creepybits/openzeppelin/blob/main/contracts/token/ERC20/ERC20Detailed.sol\npragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}"
			},
			"openzeppelin/ERC20.sol": {
				"content": "// https://github.com/Creepybits/openzeppelin/blob/main/contracts/token/ERC20/ERC20.sol\npragma solidity ^0.5.0;\n\nimport \"./GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"./math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20Mintable}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ERC20: burn amount exceeds allowance\"));\n    }\n}"
			},
			"openzeppelin/roles/Roles.sol": {
				"content": "// https://github.com/Creepybits/openzeppelin/blob/main/contracts/access/Roles.sol\npragma solidity ^0.5.0;\n\n/**\n * @title Roles\n * @dev Library for managing addresses assigned to a Role.\n */\nlibrary Roles {\n    struct Role {\n        mapping (address => bool) bearer;\n    }\n\n    /**\n     * @dev Give an account access to this role.\n     */\n    function add(Role storage role, address account) internal {\n        require(!has(role, account), \"Roles: account already has role\");\n        role.bearer[account] = true;\n    }\n\n    /**\n     * @dev Remove an account's access to this role.\n     */\n    function remove(Role storage role, address account) internal {\n        require(has(role, account), \"Roles: account does not have role\");\n        role.bearer[account] = false;\n    }\n\n    /**\n     * @dev Check if an account has this role.\n     * @return bool\n     */\n    function has(Role storage role, address account) internal view returns (bool) {\n        require(account != address(0), \"Roles: account is the zero address\");\n        return role.bearer[account];\n    }\n}"
			},
			"openzeppelin/GSN/Context.sol": {
				"content": "// https://github.com/Creepybits/openzeppelin/blob/main/contracts/GSN/Context.sol\npragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			},
			"openzeppelin/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"openzeppelin/math/SafeMath.sol": {
				"content": "// https://github.com/Creepybits/openzeppelin/blob/main/contracts/math/SafeMath.sol\npragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IExecutableProposal.sol": {
				"IExecutableProposal": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"executeProposal(uint256,uint256,uint256)": "986cc311"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IExecutableProposal.sol\":\"IExecutableProposal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IExecutableProposal.sol\":{\"keccak256\":\"0xb919c159738a5304feaef80039447e80e05fa9d60d7997d9d072ab99b4387384\",\"urls\":[\"bzz-raw://79a8b33dfb4d525254468d396c5d02d9ebf939eca502f7a7a42bd6f3602ad216\",\"dweb:/ipfs/QmZ6P2t5CBMfjZxsAaCHRB1nJqBKRK8Bkj5e7xLZuyvJfP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IQuadraticVoting.sol": {
				"IQuadraticVoting": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "CanWithdrawnFromProposal",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "ClosedVote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "OpenVote",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "addParticipant",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "minBudget",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "executableProposal",
									"type": "address"
								}
							],
							"name": "addProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "cancelProposal",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "closeVoting",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "executeSignaling",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getApprovedProposals",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getERC20",
							"outputs": [
								{
									"internalType": "contract UCMToken",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getPendingProposals",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getSignalingProposals",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "openVoting",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sellTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votes",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "withdrawFromProposal",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addParticipant()": "fffefd91",
							"addProposal(string,string,uint256,address)": "9ab3f7a6",
							"buyTokens()": "d0febe4c",
							"cancelProposal(uint256)": "e0a8f6f5",
							"closeVoting()": "c631b292",
							"executeSignaling(uint256)": "da6001d1",
							"getApprovedProposals()": "3ac0feac",
							"getERC20()": "4ece90a8",
							"getPendingProposals()": "a80db6fc",
							"getSignalingProposals()": "8e08a50b",
							"openVoting()": "affc0670",
							"sellTokens(uint256)": "6c11bcd3",
							"stake(uint256,uint256)": "7b0472f0",
							"withdrawFromProposal(uint256,uint256)": "649c649c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"CanWithdrawnFromProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ClosedVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"OpenVote\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"addParticipant\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minBudget\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"executableProposal\",\"type\":\"address\"}],\"name\":\"addProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"cancelProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeVoting\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"executeSignaling\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getApprovedProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getERC20\",\"outputs\":[{\"internalType\":\"contract UCMToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPendingProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSignalingProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openVoting\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"withdrawFromProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IQuadraticVoting.sol\":\"IQuadraticVoting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IExecutableProposal.sol\":{\"keccak256\":\"0xb919c159738a5304feaef80039447e80e05fa9d60d7997d9d072ab99b4387384\",\"urls\":[\"bzz-raw://79a8b33dfb4d525254468d396c5d02d9ebf939eca502f7a7a42bd6f3602ad216\",\"dweb:/ipfs/QmZ6P2t5CBMfjZxsAaCHRB1nJqBKRK8Bkj5e7xLZuyvJfP\"]},\"IQuadraticVoting.sol\":{\"keccak256\":\"0x273b1e878ba16952dbeaa18a5d785d4edfffacb36171865169d3f46e45ebd04a\",\"urls\":[\"bzz-raw://c724befc83bd1802ff9e47ad43edba67fab467eaff22d51bdc8c56091c65e871\",\"dweb:/ipfs/QmUhwViDnuAVfSfoc8PfY42cxkzxWVTJJ7is1pkcB6NdG4\"]},\"UCMToken.sol\":{\"keccak256\":\"0x45d17b588ce54ecbee037a4e9bd7e2ee99be110dbc26e80c1783ea1d067146ad\",\"urls\":[\"bzz-raw://8de1665df03ce5b98b6b5e913c7a529d6408c99a26351bebe009c14d643d2d85\",\"dweb:/ipfs/Qmet5CJpy8qtZ3VcDSPmuJ13Z4vUpUn4qEfAdxEKtGucB9\"]},\"openzeppelin/ERC20.sol\":{\"keccak256\":\"0xdf6a0b14735e1306a712f53b25b2b2c5cf1ade022e3bd16b19031e60d9a05db2\",\"urls\":[\"bzz-raw://447e6129ed071364c2149c4819fe39ab4262d49b8284bf33700edc6e3d65f751\",\"dweb:/ipfs/QmVF1aCzrEk6X81p36sMvjJp6mDuaMpAvGRwb72HnfPRTd\"]},\"openzeppelin/ERC20Detailed.sol\":{\"keccak256\":\"0xcd32454b8ec5f73a3258f95654ae624106e983156d9df0316213f3abc6bb033a\",\"urls\":[\"bzz-raw://3385af1dc163ef05b9ca78d898d26c3b65f76547b413eef8b00d5264c8b7b7a4\",\"dweb:/ipfs/QmTkyhiSJEXgiXHd8EihuQEri613mCXeSnMBBYMgVJDFRV\"]},\"openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x80987e1294f2d1b2deef6b0c73e7ef3416831bd938b6f9d824c21583cd50517f\",\"urls\":[\"bzz-raw://19297a2b3e7d4aeb33b8e0180e96e6a427ac1cef844828087668adedce7ea2f3\",\"dweb:/ipfs/QmZ3j76xF8ZHMwLCkPnF2btugcDRymDH3xXQym26aBvSKn\"]},\"openzeppelin/IERC20.sol\":{\"keccak256\":\"0x694b989b371044e7a6730ce6d4b3da45679b7d5a5ff57cb6d6d84d567add5312\",\"urls\":[\"bzz-raw://529be491ce5d5ff6de81273a85d17fdd0a7e1f50121b7a8b886f3612ad39caa1\",\"dweb:/ipfs/Qmd2KFSZtkSeyUES6z2c2UdZhMQ6AgKLz6DXkqX5ApyfFE\"]},\"openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x4424fbd3867daab73c27b540b229440a2674cb06ef6af869a68fb4df779c6c88\",\"urls\":[\"bzz-raw://145f661fede2b29cfc68e89c98ce835bc187a80b5ba1c20dc4b10612036c8ef9\",\"dweb:/ipfs/QmaZcvyrSQsFpmG83qHZZeHVZKdGxRz2p2PKfw447cxTZh\"]},\"openzeppelin/roles/MinterRole.sol\":{\"keccak256\":\"0xc15538d901d9f5a10b8d67aa8ef17aa799dc29bff292cb4fa7b0a3f36293dfff\",\"urls\":[\"bzz-raw://43a99428c9e5367f67c002a9c09d208aa12fe50a0c15ddbe80d5cbbe56945966\",\"dweb:/ipfs/QmVMDuuxPyEVEJTW9nVVu8L3rT7CdM8B8Nb4bvRFes7huR\"]},\"openzeppelin/roles/Roles.sol\":{\"keccak256\":\"0xd465b78997ef5912e0558bd44e254b1c27fd0d8067adf07e9888dd1863d1a859\",\"urls\":[\"bzz-raw://dcbbca346990a75ef42d9c85127999911bca8e4b2c68a7106cfe1cd470df0647\",\"dweb:/ipfs/QmVCigQe8sXKQA7Q8qDye49XJKapKJmBu8fZTfTrLLyunt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"UCMToken.sol": {
				"UCMToken": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceMinter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "stakeOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTransfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"UCMToken.sol\":150:781  contract UCMToken is ERC20, ERC20Detailed, MinterRole {... */\n  mstore(0x40, 0x80)\n    /* \"UCMToken.sol\":239:326  constructor() ERC20Detailed(\"UCM\", \"UCM\", 0) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"UCMToken.sol\":239:326  constructor() ERC20Detailed(\"UCM\", \"UCM\", 0) public {... */\n  pop\n    /* \"openzeppelin/ERC20Detailed.sol\":512:675  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x55434d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x55434d0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"UCMToken.sol\":281:282  0 */\n  0x00\n    /* \"openzeppelin/ERC20Detailed.sol\":608:612  name */\n  dup3\n    /* \"openzeppelin/ERC20Detailed.sol\":600:605  _name */\n  0x03\n    /* \"openzeppelin/ERC20Detailed.sol\":600:612  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"openzeppelin/ERC20Detailed.sol\":632:638  symbol */\n  dup2\n    /* \"openzeppelin/ERC20Detailed.sol\":622:629  _symbol */\n  0x04\n    /* \"openzeppelin/ERC20Detailed.sol\":622:638  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"openzeppelin/ERC20Detailed.sol\":660:668  decimals */\n  dup1\n    /* \"openzeppelin/ERC20Detailed.sol\":648:657  _decimals */\n  0x05\n  0x00\n    /* \"openzeppelin/ERC20Detailed.sol\":648:668  _decimals = decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"openzeppelin/ERC20Detailed.sol\":512:675  constructor (string memory name, string memory symbol, uint8 decimals) public {... */\n  pop\n  pop\n  pop\n    /* \"openzeppelin/roles/MinterRole.sol\":408:432  _addMinter(_msgSender()) */\n  tag_12\n    /* \"openzeppelin/roles/MinterRole.sol\":419:431  _msgSender() */\n  tag_13\n    /* \"openzeppelin/roles/MinterRole.sol\":419:429  _msgSender */\n  shl(0x20, tag_14)\n    /* \"openzeppelin/roles/MinterRole.sol\":419:431  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"openzeppelin/roles/MinterRole.sol\":408:418  _addMinter */\n  shl(0x20, tag_15)\n    /* \"openzeppelin/roles/MinterRole.sol\":408:432  _addMinter(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"UCMToken.sol\":309:319  msg.sender */\n  caller\n    /* \"UCMToken.sol\":301:306  owner */\n  0x07\n  0x00\n    /* \"UCMToken.sol\":301:319  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"UCMToken.sol\":150:781  contract UCMToken is ERC20, ERC20Detailed, MinterRole {... */\n  jump(tag_17)\n    /* \"openzeppelin/GSN/Context.sol\":870:966  function _msgSender() internal view returns (address payable) {... */\ntag_14:\n    /* \"openzeppelin/GSN/Context.sol\":915:930  address payable */\n  0x00\n    /* \"openzeppelin/GSN/Context.sol\":949:959  msg.sender */\n  caller\n    /* \"openzeppelin/GSN/Context.sol\":942:959  return msg.sender */\n  swap1\n  pop\n    /* \"openzeppelin/GSN/Context.sol\":870:966  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"openzeppelin/roles/MinterRole.sol\":876:995  function _addMinter(address account) internal {... */\ntag_15:\n    /* \"openzeppelin/roles/MinterRole.sol\":932:953  _minters.add(account) */\n  tag_20\n    /* \"openzeppelin/roles/MinterRole.sol\":945:952  account */\n  dup2\n    /* \"openzeppelin/roles/MinterRole.sol\":932:940  _minters */\n  0x06\n    /* \"openzeppelin/roles/MinterRole.sol\":932:944  _minters.add */\n  or(tag_0_173, shl(0x20, tag_21))\n  swap1\n    /* \"openzeppelin/roles/MinterRole.sol\":932:953  _minters.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"openzeppelin/roles/MinterRole.sol\":980:987  account */\n  dup1\n    /* \"openzeppelin/roles/MinterRole.sol\":968:988  MinterAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"openzeppelin/roles/MinterRole.sol\":876:995  function _addMinter(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"openzeppelin/roles/Roles.sol\":343:518  function add(Role storage role, address account) internal {... */\ntag_21:\n    /* \"openzeppelin/roles/Roles.sol\":420:438  has(role, account) */\n  tag_23\n    /* \"openzeppelin/roles/Roles.sol\":424:428  role */\n  dup3\n    /* \"openzeppelin/roles/Roles.sol\":430:437  account */\n  dup3\n    /* \"openzeppelin/roles/Roles.sol\":420:423  has */\n  shl(0x20, tag_24)\n    /* \"openzeppelin/roles/Roles.sol\":420:438  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"openzeppelin/roles/Roles.sol\":419:438  !has(role, account) */\n  iszero\n    /* \"openzeppelin/roles/Roles.sol\":411:474  require(!has(role, account), \"Roles: account already has role\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"openzeppelin/roles/Roles.sol\":507:511  true */\n  0x01\n    /* \"openzeppelin/roles/Roles.sol\":484:488  role */\n  dup3\n    /* \"openzeppelin/roles/Roles.sol\":484:495  role.bearer */\n  0x00\n  add\n    /* \"openzeppelin/roles/Roles.sol\":484:504  role.bearer[account] */\n  0x00\n    /* \"openzeppelin/roles/Roles.sol\":496:503  account */\n  dup4\n    /* \"openzeppelin/roles/Roles.sol\":484:504  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"openzeppelin/roles/Roles.sol\":484:511  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"openzeppelin/roles/Roles.sol\":343:518  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"openzeppelin/roles/Roles.sol\":862:1062  function has(Role storage role, address account) internal view returns (bool) {... */\ntag_24:\n    /* \"openzeppelin/roles/Roles.sol\":934:938  bool */\n  0x00\n    /* \"openzeppelin/roles/Roles.sol\":977:978  0 */\n  dup1\n    /* \"openzeppelin/roles/Roles.sol\":958:979  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"openzeppelin/roles/Roles.sol\":958:965  account */\n  dup3\n    /* \"openzeppelin/roles/Roles.sol\":958:979  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"openzeppelin/roles/Roles.sol\":950:1018  require(account != address(0), \"Roles: account is the zero address\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x22\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n  0x22\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"openzeppelin/roles/Roles.sol\":1035:1039  role */\n  dup3\n    /* \"openzeppelin/roles/Roles.sol\":1035:1046  role.bearer */\n  0x00\n  add\n    /* \"openzeppelin/roles/Roles.sol\":1035:1055  role.bearer[account] */\n  0x00\n    /* \"openzeppelin/roles/Roles.sol\":1047:1054  account */\n  dup4\n    /* \"openzeppelin/roles/Roles.sol\":1035:1055  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"openzeppelin/roles/Roles.sol\":1028:1055  return role.bearer[account] */\n  swap1\n  pop\n    /* \"openzeppelin/roles/Roles.sol\":862:1062  function has(Role storage role, address account) internal view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"UCMToken.sol\":150:781  contract UCMToken is ERC20, ERC20Detailed, MinterRole {... */\ntag_9:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_29\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_28)\ntag_29:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_28\n  jumpi\n  swap2\n  dup3\n  add\ntag_30:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_30)\ntag_31:\ntag_28:\n  pop\n  swap1\n  pop\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  pop\n  swap1\n  jump\t// out\ntag_33:\n  tag_34\n  swap2\n  swap1\ntag_35:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_36\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_35)\ntag_36:\n  pop\n  swap1\n  jump\ntag_34:\n  swap1\n  jump\t// out\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n\nsub_0: assembly {\n        /* \"UCMToken.sol\":150:781  contract UCMToken is ERC20, ERC20Detailed, MinterRole {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"UCMToken.sol\":150:781  contract UCMToken is ERC20, ERC20Detailed, MinterRole {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xaa271e1a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xebc3adcd\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x983b2d56\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x98650275\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin/ERC20Detailed.sol\":740:821  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_25:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_25)\n    tag_27:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin/ERC20Detailed.sol\":740:821  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_28\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_28:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":1639:1728  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_35:\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20Detailed.sol\":1568:1649  function decimals() public view returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"UCMToken.sol\":332:435  function mint(address account, uint amount) external onlyMinter {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_43:\n        /* \"UCMToken.sol\":332:435  function mint(address account, uint amount) external onlyMinter {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20Detailed.sol\":934:1019  function symbol() public view returns (string memory) {... */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_50:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_50)\n    tag_52:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin/ERC20Detailed.sol\":934:1019  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_53:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/roles/MinterRole.sol\":697:787  function addMinter(address account) public onlyMinter {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_55:\n        /* \"openzeppelin/roles/MinterRole.sol\":697:787  function addMinter(address account) public onlyMinter {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"openzeppelin/roles/MinterRole.sol\":793:870  function renounceMinter() public {... */\n    tag_13:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"UCMToken.sol\":441:544  function burn(address account, uint amount) external onlyMinter {... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"UCMToken.sol\":441:544  function burn(address account, uint amount) external onlyMinter {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_16:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/roles/MinterRole.sol\":584:691  function isMinter(address account) public view returns (bool) {... */\n    tag_17:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"openzeppelin/roles/MinterRole.sol\":584:691  function isMinter(address account) public view returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_18:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"UCMToken.sol\":550:679  function stakeTransfer(address stakeOwner, uint amount) external onlyMinter {... */\n    tag_19:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_75\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_75:\n        /* \"UCMToken.sol\":550:679  function stakeTransfer(address stakeOwner, uint amount) external onlyMinter {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"openzeppelin/ERC20Detailed.sol\":740:821  function name() public view returns (string memory) {... */\n    tag_24:\n        /* \"openzeppelin/ERC20Detailed.sol\":777:790  string memory */\n      0x60\n        /* \"openzeppelin/ERC20Detailed.sol\":809:814  _name */\n      0x03\n        /* \"openzeppelin/ERC20Detailed.sol\":802:814  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_79\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_78)\n    tag_79:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_80:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_80\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"openzeppelin/ERC20Detailed.sol\":740:821  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"openzeppelin/ERC20.sol\":2646:2650  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2662:2701  _approve(_msgSender(), spender, amount) */\n      tag_82\n        /* \"openzeppelin/ERC20.sol\":2671:2683  _msgSender() */\n      tag_83\n        /* \"openzeppelin/ERC20.sol\":2671:2681  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":2671:2683  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"openzeppelin/ERC20.sol\":2685:2692  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2694:2700  amount */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2662:2670  _approve */\n      tag_85\n        /* \"openzeppelin/ERC20.sol\":2662:2701  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_82:\n        /* \"openzeppelin/ERC20.sol\":2718:2722  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":2711:2722  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":1639:1728  function totalSupply() public view returns (uint256) {... */\n    tag_33:\n        /* \"openzeppelin/ERC20.sol\":1683:1690  uint256 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":1709:1721  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin/ERC20.sol\":1702:1721  return _totalSupply */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":1639:1728  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_36:\n        /* \"openzeppelin/ERC20.sol\":3276:3280  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3292:3328  _transfer(sender, recipient, amount) */\n      tag_88\n        /* \"openzeppelin/ERC20.sol\":3302:3308  sender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3310:3319  recipient */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3321:3327  amount */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3292:3301  _transfer */\n      tag_89\n        /* \"openzeppelin/ERC20.sol\":3292:3328  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"openzeppelin/ERC20.sol\":3338:3459  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_90\n        /* \"openzeppelin/ERC20.sol\":3347:3353  sender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3355:3367  _msgSender() */\n      tag_91\n        /* \"openzeppelin/ERC20.sol\":3355:3365  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":3355:3367  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"openzeppelin/ERC20.sol\":3369:3458  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_92\n        /* \"openzeppelin/ERC20.sol\":3407:3413  amount */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":3369:3458  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":3369:3380  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":3369:3388  _allowances[sender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3381:3387  sender */\n      dup12\n        /* \"openzeppelin/ERC20.sol\":3369:3388  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":3369:3402  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3389:3401  _msgSender() */\n      tag_93\n        /* \"openzeppelin/ERC20.sol\":3389:3399  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":3389:3401  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"openzeppelin/ERC20.sol\":3369:3402  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":3369:3406  _allowances[sender][_msgSender()].sub */\n      tag_94\n      swap1\n        /* \"openzeppelin/ERC20.sol\":3369:3458  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"openzeppelin/ERC20.sol\":3338:3346  _approve */\n      tag_85\n        /* \"openzeppelin/ERC20.sol\":3338:3459  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_90:\n        /* \"openzeppelin/ERC20.sol\":3476:3480  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":3469:3480  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20Detailed.sol\":1568:1649  function decimals() public view returns (uint8) {... */\n    tag_38:\n        /* \"openzeppelin/ERC20Detailed.sol\":1609:1614  uint8 */\n      0x00\n        /* \"openzeppelin/ERC20Detailed.sol\":1633:1642  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin/ERC20Detailed.sol\":1626:1642  return _decimals */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20Detailed.sol\":1568:1649  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_41:\n        /* \"openzeppelin/ERC20.sol\":3962:3966  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3978:4061  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_97\n        /* \"openzeppelin/ERC20.sol\":3987:3999  _msgSender() */\n      tag_98\n        /* \"openzeppelin/ERC20.sol\":3987:3997  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":3987:3999  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"openzeppelin/ERC20.sol\":4001:4008  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":4010:4060  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_99\n        /* \"openzeppelin/ERC20.sol\":4049:4059  addedValue */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":4010:4021  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4010:4035  _allowances[_msgSender()] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4022:4034  _msgSender() */\n      tag_100\n        /* \"openzeppelin/ERC20.sol\":4022:4032  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":4022:4034  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"openzeppelin/ERC20.sol\":4010:4035  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":4010:4044  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4036:4043  spender */\n      dup10\n        /* \"openzeppelin/ERC20.sol\":4010:4044  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":4010:4048  _allowances[_msgSender()][spender].add */\n      tag_101\n      swap1\n        /* \"openzeppelin/ERC20.sol\":4010:4060  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"openzeppelin/ERC20.sol\":3978:3986  _approve */\n      tag_85\n        /* \"openzeppelin/ERC20.sol\":3978:4061  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_97:\n        /* \"openzeppelin/ERC20.sol\":4078:4082  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4071:4082  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"UCMToken.sol\":332:435  function mint(address account, uint amount) external onlyMinter {... */\n    tag_44:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      tag_103\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      tag_104\n        /* \"openzeppelin/roles/MinterRole.sol\":494:504  _msgSender */\n      tag_84\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:493  isMinter */\n      tag_70\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      jump\t// in\n    tag_103:\n        /* \"openzeppelin/roles/MinterRole.sol\":477:560  require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"UCMToken.sol\":406:428  _mint(account, amount) */\n      tag_107\n        /* \"UCMToken.sol\":412:419  account */\n      dup3\n        /* \"UCMToken.sol\":421:427  amount */\n      dup3\n        /* \"UCMToken.sol\":406:411  _mint */\n      tag_108\n        /* \"UCMToken.sol\":406:428  _mint(account, amount) */\n      jump\t// in\n    tag_107:\n        /* \"UCMToken.sol\":332:435  function mint(address account, uint amount) external onlyMinter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n    tag_47:\n        /* \"openzeppelin/ERC20.sol\":1843:1850  uint256 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":1869:1878  _balances */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":1869:1887  _balances[account] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":1879:1886  account */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":1869:1887  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":1862:1887  return _balances[account] */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20Detailed.sol\":934:1019  function symbol() public view returns (string memory) {... */\n    tag_49:\n        /* \"openzeppelin/ERC20Detailed.sol\":973:986  string memory */\n      0x60\n        /* \"openzeppelin/ERC20Detailed.sol\":1005:1012  _symbol */\n      0x04\n        /* \"openzeppelin/ERC20Detailed.sol\":998:1012  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"openzeppelin/ERC20Detailed.sol\":934:1019  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/roles/MinterRole.sol\":697:787  function addMinter(address account) public onlyMinter {... */\n    tag_56:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      tag_115\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      tag_116\n        /* \"openzeppelin/roles/MinterRole.sol\":494:504  _msgSender */\n      tag_84\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:493  isMinter */\n      tag_70\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      jump\t// in\n    tag_115:\n        /* \"openzeppelin/roles/MinterRole.sol\":477:560  require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"openzeppelin/roles/MinterRole.sol\":761:780  _addMinter(account) */\n      tag_119\n        /* \"openzeppelin/roles/MinterRole.sol\":772:779  account */\n      dup2\n        /* \"openzeppelin/roles/MinterRole.sol\":761:771  _addMinter */\n      tag_120\n        /* \"openzeppelin/roles/MinterRole.sol\":761:780  _addMinter(account) */\n      jump\t// in\n    tag_119:\n        /* \"openzeppelin/roles/MinterRole.sol\":697:787  function addMinter(address account) public onlyMinter {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/MinterRole.sol\":793:870  function renounceMinter() public {... */\n    tag_58:\n        /* \"openzeppelin/roles/MinterRole.sol\":836:863  _removeMinter(_msgSender()) */\n      tag_122\n        /* \"openzeppelin/roles/MinterRole.sol\":850:862  _msgSender() */\n      tag_123\n        /* \"openzeppelin/roles/MinterRole.sol\":850:860  _msgSender */\n      tag_84\n        /* \"openzeppelin/roles/MinterRole.sol\":850:862  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"openzeppelin/roles/MinterRole.sol\":836:849  _removeMinter */\n      tag_124\n        /* \"openzeppelin/roles/MinterRole.sol\":836:863  _removeMinter(_msgSender()) */\n      jump\t// in\n    tag_122:\n        /* \"openzeppelin/roles/MinterRole.sol\":793:870  function renounceMinter() public {... */\n      jump\t// out\n        /* \"UCMToken.sol\":441:544  function burn(address account, uint amount) external onlyMinter {... */\n    tag_61:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      tag_126\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      tag_127\n        /* \"openzeppelin/roles/MinterRole.sol\":494:504  _msgSender */\n      tag_84\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:493  isMinter */\n      tag_70\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      jump\t// in\n    tag_126:\n        /* \"openzeppelin/roles/MinterRole.sol\":477:560  require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"UCMToken.sol\":515:537  _burn(account, amount) */\n      tag_130\n        /* \"UCMToken.sol\":521:528  account */\n      dup3\n        /* \"UCMToken.sol\":530:536  amount */\n      dup3\n        /* \"UCMToken.sol\":515:520  _burn */\n      tag_131\n        /* \"UCMToken.sol\":515:537  _burn(account, amount) */\n      jump\t// in\n    tag_130:\n        /* \"UCMToken.sol\":441:544  function burn(address account, uint amount) external onlyMinter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_64:\n        /* \"openzeppelin/ERC20.sol\":4661:4665  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4677:4806  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_133\n        /* \"openzeppelin/ERC20.sol\":4686:4698  _msgSender() */\n      tag_134\n        /* \"openzeppelin/ERC20.sol\":4686:4696  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":4686:4698  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"openzeppelin/ERC20.sol\":4700:4707  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":4709:4805  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_135\n        /* \"openzeppelin/ERC20.sol\":4748:4763  subtractedValue */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":4709:4805  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":4709:4720  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4709:4734  _allowances[_msgSender()] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4721:4733  _msgSender() */\n      tag_136\n        /* \"openzeppelin/ERC20.sol\":4721:4731  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":4721:4733  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"openzeppelin/ERC20.sol\":4709:4734  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":4709:4743  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4735:4742  spender */\n      dup11\n        /* \"openzeppelin/ERC20.sol\":4709:4743  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":4709:4747  _allowances[_msgSender()][spender].sub */\n      tag_94\n      swap1\n        /* \"openzeppelin/ERC20.sol\":4709:4805  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"openzeppelin/ERC20.sol\":4677:4685  _approve */\n      tag_85\n        /* \"openzeppelin/ERC20.sol\":4677:4806  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_133:\n        /* \"openzeppelin/ERC20.sol\":4823:4827  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4816:4827  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_67:\n        /* \"openzeppelin/ERC20.sol\":2166:2170  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2182:2224  _transfer(_msgSender(), recipient, amount) */\n      tag_138\n        /* \"openzeppelin/ERC20.sol\":2192:2204  _msgSender() */\n      tag_139\n        /* \"openzeppelin/ERC20.sol\":2192:2202  _msgSender */\n      tag_84\n        /* \"openzeppelin/ERC20.sol\":2192:2204  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"openzeppelin/ERC20.sol\":2206:2215  recipient */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2217:2223  amount */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2182:2191  _transfer */\n      tag_89\n        /* \"openzeppelin/ERC20.sol\":2182:2224  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_138:\n        /* \"openzeppelin/ERC20.sol\":2241:2245  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":2234:2245  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/MinterRole.sol\":584:691  function isMinter(address account) public view returns (bool) {... */\n    tag_70:\n        /* \"openzeppelin/roles/MinterRole.sol\":640:644  bool */\n      0x00\n        /* \"openzeppelin/roles/MinterRole.sol\":663:684  _minters.has(account) */\n      tag_141\n        /* \"openzeppelin/roles/MinterRole.sol\":676:683  account */\n      dup3\n        /* \"openzeppelin/roles/MinterRole.sol\":663:671  _minters */\n      0x06\n        /* \"openzeppelin/roles/MinterRole.sol\":663:675  _minters.has */\n      tag_142\n      swap1\n        /* \"openzeppelin/roles/MinterRole.sol\":663:684  _minters.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"openzeppelin/roles/MinterRole.sol\":656:684  return _minters.has(account) */\n      swap1\n      pop\n        /* \"openzeppelin/roles/MinterRole.sol\":584:691  function isMinter(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_73:\n        /* \"openzeppelin/ERC20.sol\":2382:2389  uint256 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2408:2419  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":2408:2426  _allowances[owner] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2420:2425  owner */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2408:2426  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":2408:2435  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2427:2434  spender */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":2408:2435  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":2401:2435  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"UCMToken.sol\":550:679  function stakeTransfer(address stakeOwner, uint amount) external onlyMinter {... */\n    tag_76:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      tag_145\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      tag_146\n        /* \"openzeppelin/roles/MinterRole.sol\":494:504  _msgSender */\n      tag_84\n        /* \"openzeppelin/roles/MinterRole.sol\":494:506  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"openzeppelin/roles/MinterRole.sol\":485:493  isMinter */\n      tag_70\n        /* \"openzeppelin/roles/MinterRole.sol\":485:507  isMinter(_msgSender()) */\n      jump\t// in\n    tag_145:\n        /* \"openzeppelin/roles/MinterRole.sol\":477:560  require(isMinter(_msgSender()), \"MinterRole: caller does not have the Minter role\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"UCMToken.sol\":636:672  _transfer(stakeOwner, owner, amount) */\n      tag_149\n        /* \"UCMToken.sol\":646:656  stakeOwner */\n      dup3\n        /* \"UCMToken.sol\":658:663  owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"UCMToken.sol\":665:671  amount */\n      dup4\n        /* \"UCMToken.sol\":636:645  _transfer */\n      tag_89\n        /* \"UCMToken.sol\":636:672  _transfer(stakeOwner, owner, amount) */\n      jump\t// in\n    tag_149:\n        /* \"UCMToken.sol\":550:679  function stakeTransfer(address stakeOwner, uint amount) external onlyMinter {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/GSN/Context.sol\":870:966  function _msgSender() internal view returns (address payable) {... */\n    tag_84:\n        /* \"openzeppelin/GSN/Context.sol\":915:930  address payable */\n      0x00\n        /* \"openzeppelin/GSN/Context.sol\":949:959  msg.sender */\n      caller\n        /* \"openzeppelin/GSN/Context.sol\":942:959  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin/GSN/Context.sol\":870:966  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":7430:7762  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_85:\n        /* \"openzeppelin/ERC20.sol\":7540:7541  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7523:7542  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":7523:7528  owner */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":7523:7542  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":7515:7583  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"openzeppelin/ERC20.sol\":7620:7621  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7601:7622  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":7601:7608  spender */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":7601:7622  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":7593:7661  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"openzeppelin/ERC20.sol\":7702:7708  amount */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":7672:7683  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":7672:7690  _allowances[owner] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7684:7689  owner */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":7672:7690  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":7672:7699  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7691:7698  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":7672:7699  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":7672:7708  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":7739:7746  spender */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":7723:7755  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":7732:7737  owner */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":7723:7755  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"openzeppelin/ERC20.sol\":7748:7754  amount */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":7723:7755  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin/ERC20.sol\":7430:7762  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":5308:5772  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_89:\n        /* \"openzeppelin/ERC20.sol\":5423:5424  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5405:5425  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":5405:5411  sender */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":5405:5425  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":5397:5467  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"openzeppelin/ERC20.sol\":5506:5507  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5485:5508  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":5485:5494  recipient */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":5485:5508  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":5477:5548  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"openzeppelin/ERC20.sol\":5579:5650  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_157\n        /* \"openzeppelin/ERC20.sol\":5601:5607  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":5579:5650  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":5579:5588  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5579:5596  _balances[sender] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5589:5595  sender */\n      dup8\n        /* \"openzeppelin/ERC20.sol\":5579:5596  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":5579:5600  _balances[sender].sub */\n      tag_94\n      swap1\n        /* \"openzeppelin/ERC20.sol\":5579:5650  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"openzeppelin/ERC20.sol\":5559:5568  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5559:5576  _balances[sender] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5569:5575  sender */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":5559:5576  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":5559:5650  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":5683:5715  _balances[recipient].add(amount) */\n      tag_158\n        /* \"openzeppelin/ERC20.sol\":5708:5714  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":5683:5692  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5683:5703  _balances[recipient] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5693:5702  recipient */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":5683:5703  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":5683:5707  _balances[recipient].add */\n      tag_101\n      swap1\n        /* \"openzeppelin/ERC20.sol\":5683:5715  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"openzeppelin/ERC20.sol\":5660:5669  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5660:5680  _balances[recipient] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5670:5679  recipient */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":5660:5680  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":5660:5715  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":5747:5756  recipient */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":5730:5765  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":5739:5745  sender */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":5730:5765  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin/ERC20.sol\":5758:5764  amount */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":5730:5765  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin/ERC20.sol\":5308:5772  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/math/SafeMath.sol\":1816:2003  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_94:\n        /* \"openzeppelin/math/SafeMath.sol\":1902:1909  uint256 */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":1934:1935  a */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1929:1930  b */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1929:1935  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin/math/SafeMath.sol\":1937:1949  errorMessage */\n      dup3\n        /* \"openzeppelin/math/SafeMath.sol\":1921:1950  require(b <= a, errorMessage) */\n      swap1\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_161:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_161)\n    tag_163:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1921:1950  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_164:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1960:1969  uint256 c */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":1976:1977  b */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1972:1973  a */\n      dup6\n        /* \"openzeppelin/math/SafeMath.sol\":1972:1977  a - b */\n      sub\n        /* \"openzeppelin/math/SafeMath.sol\":1960:1977  uint256 c = a - b */\n      swap1\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1995:1996  c */\n      dup1\n        /* \"openzeppelin/math/SafeMath.sol\":1988:1996  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1816:2003  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/math/SafeMath.sol\":918:1094  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_101:\n        /* \"openzeppelin/math/SafeMath.sol\":976:983  uint256 */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":995:1004  uint256 c */\n      dup1\n        /* \"openzeppelin/math/SafeMath.sol\":1011:1012  b */\n      dup3\n        /* \"openzeppelin/math/SafeMath.sol\":1007:1008  a */\n      dup5\n        /* \"openzeppelin/math/SafeMath.sol\":1007:1012  a + b */\n      add\n        /* \"openzeppelin/math/SafeMath.sol\":995:1012  uint256 c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1035:1036  a */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1030:1031  c */\n      dup2\n        /* \"openzeppelin/math/SafeMath.sol\":1030:1036  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin/math/SafeMath.sol\":1022:1068  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"openzeppelin/math/SafeMath.sol\":1086:1087  c */\n      dup1\n        /* \"openzeppelin/math/SafeMath.sol\":1079:1087  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":918:1094  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":6042:6344  function _mint(address account, uint256 amount) internal {... */\n    tag_108:\n        /* \"openzeppelin/ERC20.sol\":6136:6137  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6117:6138  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":6117:6124  account */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":6117:6138  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":6109:6174  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"openzeppelin/ERC20.sol\":6200:6224  _totalSupply.add(amount) */\n      tag_169\n        /* \"openzeppelin/ERC20.sol\":6217:6223  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":6200:6212  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin/ERC20.sol\":6200:6216  _totalSupply.add */\n      tag_101\n      swap1\n        /* \"openzeppelin/ERC20.sol\":6200:6224  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"openzeppelin/ERC20.sol\":6185:6197  _totalSupply */\n      0x02\n        /* \"openzeppelin/ERC20.sol\":6185:6224  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":6255:6285  _balances[account].add(amount) */\n      tag_170\n        /* \"openzeppelin/ERC20.sol\":6278:6284  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":6255:6264  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6255:6273  _balances[account] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":6265:6272  account */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":6255:6273  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":6255:6277  _balances[account].add */\n      tag_101\n      swap1\n        /* \"openzeppelin/ERC20.sol\":6255:6285  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"openzeppelin/ERC20.sol\":6234:6243  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6234:6252  _balances[account] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":6244:6251  account */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":6234:6252  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":6234:6285  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":6321:6328  account */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":6300:6337  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":6317:6318  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6300:6337  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin/ERC20.sol\":6330:6336  amount */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":6300:6337  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin/ERC20.sol\":6042:6344  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/MinterRole.sol\":876:995  function _addMinter(address account) internal {... */\n    tag_120:\n        /* \"openzeppelin/roles/MinterRole.sol\":932:953  _minters.add(account) */\n      tag_172\n        /* \"openzeppelin/roles/MinterRole.sol\":945:952  account */\n      dup2\n        /* \"openzeppelin/roles/MinterRole.sol\":932:940  _minters */\n      0x06\n        /* \"openzeppelin/roles/MinterRole.sol\":932:944  _minters.add */\n      tag_173\n      swap1\n        /* \"openzeppelin/roles/MinterRole.sol\":932:953  _minters.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"openzeppelin/roles/MinterRole.sol\":980:987  account */\n      dup1\n        /* \"openzeppelin/roles/MinterRole.sol\":968:988  MinterAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"openzeppelin/roles/MinterRole.sol\":876:995  function _addMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/MinterRole.sol\":1001:1128  function _removeMinter(address account) internal {... */\n    tag_124:\n        /* \"openzeppelin/roles/MinterRole.sol\":1060:1084  _minters.remove(account) */\n      tag_175\n        /* \"openzeppelin/roles/MinterRole.sol\":1076:1083  account */\n      dup2\n        /* \"openzeppelin/roles/MinterRole.sol\":1060:1068  _minters */\n      0x06\n        /* \"openzeppelin/roles/MinterRole.sol\":1060:1075  _minters.remove */\n      tag_176\n      swap1\n        /* \"openzeppelin/roles/MinterRole.sol\":1060:1084  _minters.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"openzeppelin/roles/MinterRole.sol\":1113:1120  account */\n      dup1\n        /* \"openzeppelin/roles/MinterRole.sol\":1099:1121  MinterRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"openzeppelin/roles/MinterRole.sol\":1001:1128  function _removeMinter(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":6663:7005  function _burn(address account, uint256 amount) internal {... */\n    tag_131:\n        /* \"openzeppelin/ERC20.sol\":6757:6758  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6738:6759  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":6738:6745  account */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":6738:6759  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":6730:6797  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"openzeppelin/ERC20.sol\":6829:6897  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_179\n        /* \"openzeppelin/ERC20.sol\":6852:6858  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":6829:6897  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":6829:6838  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6829:6847  _balances[account] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":6839:6846  account */\n      dup7\n        /* \"openzeppelin/ERC20.sol\":6829:6847  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":6829:6851  _balances[account].sub */\n      tag_94\n      swap1\n        /* \"openzeppelin/ERC20.sol\":6829:6897  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"openzeppelin/ERC20.sol\":6808:6817  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6808:6826  _balances[account] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":6818:6825  account */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":6808:6826  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":6808:6897  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":6922:6946  _totalSupply.sub(amount) */\n      tag_180\n        /* \"openzeppelin/ERC20.sol\":6939:6945  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":6922:6934  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin/ERC20.sol\":6922:6938  _totalSupply.sub */\n      tag_181\n      swap1\n        /* \"openzeppelin/ERC20.sol\":6922:6946  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"openzeppelin/ERC20.sol\":6907:6919  _totalSupply */\n      0x02\n        /* \"openzeppelin/ERC20.sol\":6907:6946  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":6987:6988  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":6961:6998  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":6970:6977  account */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":6961:6998  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin/ERC20.sol\":6991:6997  amount */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":6961:6998  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin/ERC20.sol\":6663:7005  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/Roles.sol\":862:1062  function has(Role storage role, address account) internal view returns (bool) {... */\n    tag_142:\n        /* \"openzeppelin/roles/Roles.sol\":934:938  bool */\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":977:978  0 */\n      dup1\n        /* \"openzeppelin/roles/Roles.sol\":958:979  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/roles/Roles.sol\":958:965  account */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":958:979  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/roles/Roles.sol\":950:1018  require(account != address(0), \"Roles: account is the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"openzeppelin/roles/Roles.sol\":1035:1039  role */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":1035:1046  role.bearer */\n      0x00\n      add\n        /* \"openzeppelin/roles/Roles.sol\":1035:1055  role.bearer[account] */\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":1047:1054  account */\n      dup4\n        /* \"openzeppelin/roles/Roles.sol\":1035:1055  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"openzeppelin/roles/Roles.sol\":1028:1055  return role.bearer[account] */\n      swap1\n      pop\n        /* \"openzeppelin/roles/Roles.sol\":862:1062  function has(Role storage role, address account) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/Roles.sol\":343:518  function add(Role storage role, address account) internal {... */\n    tag_173:\n        /* \"openzeppelin/roles/Roles.sol\":420:438  has(role, account) */\n      tag_185\n        /* \"openzeppelin/roles/Roles.sol\":424:428  role */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":430:437  account */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":420:423  has */\n      tag_142\n        /* \"openzeppelin/roles/Roles.sol\":420:438  has(role, account) */\n      jump\t// in\n    tag_185:\n        /* \"openzeppelin/roles/Roles.sol\":419:438  !has(role, account) */\n      iszero\n        /* \"openzeppelin/roles/Roles.sol\":411:474  require(!has(role, account), \"Roles: account already has role\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"openzeppelin/roles/Roles.sol\":507:511  true */\n      0x01\n        /* \"openzeppelin/roles/Roles.sol\":484:488  role */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":484:495  role.bearer */\n      0x00\n      add\n        /* \"openzeppelin/roles/Roles.sol\":484:504  role.bearer[account] */\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":496:503  account */\n      dup4\n        /* \"openzeppelin/roles/Roles.sol\":484:504  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":484:511  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/roles/Roles.sol\":343:518  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/roles/Roles.sol\":593:773  function remove(Role storage role, address account) internal {... */\n    tag_176:\n        /* \"openzeppelin/roles/Roles.sol\":672:690  has(role, account) */\n      tag_188\n        /* \"openzeppelin/roles/Roles.sol\":676:680  role */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":682:689  account */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":672:675  has */\n      tag_142\n        /* \"openzeppelin/roles/Roles.sol\":672:690  has(role, account) */\n      jump\t// in\n    tag_188:\n        /* \"openzeppelin/roles/Roles.sol\":664:728  require(has(role, account), \"Roles: account does not have role\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"openzeppelin/roles/Roles.sol\":761:766  false */\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":738:742  role */\n      dup3\n        /* \"openzeppelin/roles/Roles.sol\":738:749  role.bearer */\n      0x00\n      add\n        /* \"openzeppelin/roles/Roles.sol\":738:758  role.bearer[account] */\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":750:757  account */\n      dup4\n        /* \"openzeppelin/roles/Roles.sol\":738:758  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin/roles/Roles.sol\":738:766  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/roles/Roles.sol\":593:773  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/math/SafeMath.sol\":1358:1492  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"openzeppelin/math/SafeMath.sol\":1416:1423  uint256 */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":1442:1485  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_191\n        /* \"openzeppelin/math/SafeMath.sol\":1446:1447  a */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1449:1450  b */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1442:1485  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1442:1445  sub */\n      tag_94\n        /* \"openzeppelin/math/SafeMath.sol\":1442:1485  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_191:\n        /* \"openzeppelin/math/SafeMath.sol\":1435:1485  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1358:1492  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd 4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65\n    data_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257 526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f 526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa265627a7a723158203e4aa20fc4f73a3c2828e0b469810cc62747386989986d41706dcef41d37fa4864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600381526020017f55434d00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f55434d0000000000000000000000000000000000000000000000000000000000815250600082600390805190602001906200009892919062000364565b508160049080519060200190620000b192919062000364565b5080600560006101000a81548160ff021916908360ff160217905550505050620000f0620000e46200013760201b60201c565b6200013f60201b60201c565b33600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000413565b600033905090565b6200015a816006620001a060201b620018c11790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620001b282826200028460201b60201c565b1562000226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200030d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620020b26022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a757805160ff1916838001178555620003d8565b82800160010185558215620003d8579182015b82811115620003d7578251825591602001919060010190620003ba565b5b509050620003e79190620003eb565b5090565b6200041091905b808211156200040c576000816000905550600101620003f2565b5090565b90565b611c8f80620004236000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806395d89b41116100a2578063a457c2d711610071578063a457c2d7146104ec578063a9059cbb14610552578063aa271e1a146105b8578063dd62ed3e14610614578063ebc3adcd1461068c5761010b565b806395d89b41146103cd578063983b2d561461045057806398650275146104945780639dc29fac1461049e5761010b565b8063313ce567116100de578063313ce5671461029d57806339509351146102c157806340c10f191461032757806370a08231146103755761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f957806323b872dd14610217575b600080fd5b6101186106da565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061077c565b604051808215151515815260200191505060405180910390f35b61020161079a565b6040518082815260200191505060405180910390f35b6102836004803603606081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107a4565b604051808215151515815260200191505060405180910390f35b6102a561087d565b604051808260ff1660ff16815260200191505060405180910390f35b61030d600480360360408110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610894565b604051808215151515815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610947565b005b6103b76004803603602081101561038b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ba565b6040518082815260200191505060405180910390f35b6103d5610a02565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104155780820151818401526020810190506103fa565b50505050905090810190601f1680156104425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104926004803603602081101561046657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa4565b005b61049c610b15565b005b6104ea600480360360408110156104b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b27565b005b6105386004803603604081101561050257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9a565b604051808215151515815260200191505060405180910390f35b61059e6004803603604081101561056857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c67565b604051808215151515815260200191505060405180910390f35b6105fa600480360360208110156105ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c85565b604051808215151515815260200191505060405180910390f35b6106766004803603604081101561062a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca2565b6040518082815260200191505060405180910390f35b6106d8600480360360408110156106a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d29565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107725780601f1061074757610100808354040283529160200191610772565b820191906000526020600020905b81548152906001019060200180831161075557829003601f168201915b5050505050905090565b6000610790610789610dbf565b8484610dc7565b6001905092915050565b6000600254905090565b60006107b1848484610fbe565b610872846107bd610dbf565b61086d85604051806060016040528060288152602001611b8260289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610823610dbf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b610dc7565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061093d6108a1610dbf565b8461093885600160006108b2610dbf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133490919063ffffffff16565b610dc7565b6001905092915050565b610957610952610dbf565b610c85565b6109ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b6109b682826113bc565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b5050505050905090565b610ab4610aaf610dbf565b610c85565b610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b610b1281611577565b50565b610b25610b20610dbf565b6115d1565b565b610b37610b32610dbf565b610c85565b610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b610b96828261162b565b5050565b6000610c5d610ba7610dbf565b84610c5885604051806060016040528060258152602001611c366025913960016000610bd1610dbf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b610dc7565b6001905092915050565b6000610c7b610c74610dbf565b8484610fbe565b6001905092915050565b6000610c9b8260066117e390919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d39610d34610dbf565b610c85565b610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b610dbb82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610fbe565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c126024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ae96022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611044576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611bed6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611aa46023913960400191505060405180910390fd5b61113581604051806060016040528060268152602001611b0b602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111c8816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133490919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611321576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112e65780820151818401526020810190506112cb565b50505050905090810190601f1680156113135780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156113b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6114748160025461133490919063ffffffff16565b6002819055506114cb816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133490919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61158b8160066118c190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6115e581600661199c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bcc6021913960400191505060405180910390fd5b61171c81604051806060016040528060228152602001611ac7602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061177381600254611a5990919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561186a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611baa6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6118cb82826117e3565b1561193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6119a682826117e3565b6119fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b616021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000611a9b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611274565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203e4aa20fc4f73a3c2828e0b469810cc62747386989986d41706dcef41d37fa4864736f6c63430005110032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x55434D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x55434D0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x98 SWAP3 SWAP2 SWAP1 PUSH3 0x364 JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB1 SWAP3 SWAP2 SWAP1 PUSH3 0x364 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0xF0 PUSH3 0xE4 PUSH3 0x137 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x13F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x413 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x15A DUP2 PUSH1 0x6 PUSH3 0x1A0 PUSH1 0x20 SHL PUSH3 0x18C1 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH3 0x1B2 DUP3 DUP3 PUSH3 0x284 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x226 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x30D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x20B2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3A7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3D8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3D8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3D7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3BA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x3E7 SWAP2 SWAP1 PUSH3 0x3EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x410 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x40C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x3F2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1C8F DUP1 PUSH3 0x423 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xEBC3ADCD EQ PUSH2 0x68C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x49E JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x375 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x217 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x158 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x185 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x415 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x442 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49C PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB27 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x772 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x747 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x772 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x755 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 PUSH2 0x789 PUSH2 0xDBF JUMP JUMPDEST DUP5 DUP5 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x872 DUP5 PUSH2 0x7BD PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x86D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B82 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x823 PUSH2 0xDBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D PUSH2 0x8A1 PUSH2 0xDBF JUMP JUMPDEST DUP5 PUSH2 0x938 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x8B2 PUSH2 0xDBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x957 PUSH2 0x952 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B6 DUP3 DUP3 PUSH2 0x13BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB4 PUSH2 0xAAF PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0x1577 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB25 PUSH2 0xB20 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB37 PUSH2 0xB32 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB96 DUP3 DUP3 PUSH2 0x162B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5D PUSH2 0xBA7 PUSH2 0xDBF JUMP JUMPDEST DUP5 PUSH2 0xC58 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C36 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xBD1 PUSH2 0xDBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B PUSH2 0xC74 PUSH2 0xDBF JUMP JUMPDEST DUP5 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP3 PUSH1 0x6 PUSH2 0x17E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD39 PUSH2 0xD34 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDBB DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xFBE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C12 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE9 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BED PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AA4 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11C8 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1313 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1474 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x14CB DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x158B DUP2 PUSH1 0x6 PUSH2 0x18C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x15E5 DUP2 PUSH1 0x6 PUSH2 0x199C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BCC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AC7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1773 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1A59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x186A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BAA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18CB DUP3 DUP3 PUSH2 0x17E3 JUMP JUMPDEST ISZERO PUSH2 0x193E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x19A6 DUP3 DUP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x19FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B61 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1274 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654D696E74 PUSH6 0x72526F6C653A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x20646F6573206E6F7420686176652074686520 0x4D PUSH10 0x6E74657220726F6C6552 PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C6545524332303A KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365526F6C65733A20616363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737345524332303A206275726E2066726F6D KECCAK256 PUSH21 0x6865207A65726F206164647265737345524332303A KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x723158203E4AA20FC4F73A3C2828E0B469810CC62747386989986D COINBASE PUSH17 0x6DCEF41D37FA4864736F6C634300051100 ORIGIN MSTORE PUSH16 0x6C65733A206163636F756E7420697320 PUSH21 0x6865207A65726F2061646472657373000000000000 ",
							"sourceMap": "150:631:2:-;;;239:87;8:9:-1;5:2;;;30:1;27;20:12;5:2;239:87:2;512:163:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:1:2;608:4:4;600:5;:12;;;;;;;;;;;;:::i;:::-;;632:6;622:7;:16;;;;;;;;;;;;:::i;:::-;;660:8;648:9;;:20;;;;;;;;;;;;;;;;;;512:163;;;408:24:8;419:12;:10;;;:12;;:::i;:::-;408:10;;;:24;;:::i;:::-;309:10:2;301:5;;:18;;;;;;;;;;;;;;;;;;150:631;;870:96:5;915:15;949:10;942:17;;870:96;:::o;876:119:8:-;932:21;945:7;932:8;:12;;;;;;:21;;;;:::i;:::-;980:7;968:20;;;;;;;;;;;;876:119;:::o;343:175:9:-;420:18;424:4;430:7;420:3;;;:18;;:::i;:::-;419:19;411:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:4;484;:11;;:20;496:7;484:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;343:175;;:::o;862:200::-;934:4;977:1;958:21;;:7;:21;;;;950:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:4;:11;;:20;1047:7;1035:20;;;;;;;;;;;;;;;;;;;;;;;;;1028:27;;862:200;;;;:::o;150:631:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806395d89b41116100a2578063a457c2d711610071578063a457c2d7146104ec578063a9059cbb14610552578063aa271e1a146105b8578063dd62ed3e14610614578063ebc3adcd1461068c5761010b565b806395d89b41146103cd578063983b2d561461045057806398650275146104945780639dc29fac1461049e5761010b565b8063313ce567116100de578063313ce5671461029d57806339509351146102c157806340c10f191461032757806370a08231146103755761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f957806323b872dd14610217575b600080fd5b6101186106da565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061077c565b604051808215151515815260200191505060405180910390f35b61020161079a565b6040518082815260200191505060405180910390f35b6102836004803603606081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107a4565b604051808215151515815260200191505060405180910390f35b6102a561087d565b604051808260ff1660ff16815260200191505060405180910390f35b61030d600480360360408110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610894565b604051808215151515815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610947565b005b6103b76004803603602081101561038b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ba565b6040518082815260200191505060405180910390f35b6103d5610a02565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104155780820151818401526020810190506103fa565b50505050905090810190601f1680156104425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104926004803603602081101561046657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa4565b005b61049c610b15565b005b6104ea600480360360408110156104b457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b27565b005b6105386004803603604081101561050257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b9a565b604051808215151515815260200191505060405180910390f35b61059e6004803603604081101561056857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c67565b604051808215151515815260200191505060405180910390f35b6105fa600480360360208110156105ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c85565b604051808215151515815260200191505060405180910390f35b6106766004803603604081101561062a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ca2565b6040518082815260200191505060405180910390f35b6106d8600480360360408110156106a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d29565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107725780601f1061074757610100808354040283529160200191610772565b820191906000526020600020905b81548152906001019060200180831161075557829003601f168201915b5050505050905090565b6000610790610789610dbf565b8484610dc7565b6001905092915050565b6000600254905090565b60006107b1848484610fbe565b610872846107bd610dbf565b61086d85604051806060016040528060288152602001611b8260289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610823610dbf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b610dc7565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061093d6108a1610dbf565b8461093885600160006108b2610dbf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133490919063ffffffff16565b610dc7565b6001905092915050565b610957610952610dbf565b610c85565b6109ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b6109b682826113bc565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a9a5780601f10610a6f57610100808354040283529160200191610a9a565b820191906000526020600020905b815481529060010190602001808311610a7d57829003601f168201915b5050505050905090565b610ab4610aaf610dbf565b610c85565b610b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b610b1281611577565b50565b610b25610b20610dbf565b6115d1565b565b610b37610b32610dbf565b610c85565b610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b610b96828261162b565b5050565b6000610c5d610ba7610dbf565b84610c5885604051806060016040528060258152602001611c366025913960016000610bd1610dbf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b610dc7565b6001905092915050565b6000610c7b610c74610dbf565b8484610fbe565b6001905092915050565b6000610c9b8260066117e390919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610d39610d34610dbf565b610c85565b610d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b316030913960400191505060405180910390fd5b610dbb82600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610fbe565b5050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c126024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ae96022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611044576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611bed6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611aa46023913960400191505060405180910390fd5b61113581604051806060016040528060268152602001611b0b602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111c8816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133490919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611321576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112e65780820151818401526020810190506112cb565b50505050905090810190601f1680156113135780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156113b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6114748160025461133490919063ffffffff16565b6002819055506114cb816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133490919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61158b8160066118c190919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6115e581600661199c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bcc6021913960400191505060405180910390fd5b61171c81604051806060016040528060228152602001611ac7602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112749092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061177381600254611a5990919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561186a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611baa6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6118cb82826117e3565b1561193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6119a682826117e3565b6119fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b616021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000611a9b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611274565b90509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158203e4aa20fc4f73a3c2828e0b469810cc62747386989986d41706dcef41d37fa4864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x5B8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xEBC3ADCD EQ PUSH2 0x68C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x983B2D56 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x98650275 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x49E JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x375 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x217 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x158 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x185 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x947 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x415 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x442 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAA4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49C PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB27 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x538 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x676 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD29 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x772 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x747 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x772 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x755 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 PUSH2 0x789 PUSH2 0xDBF JUMP JUMPDEST DUP5 DUP5 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP5 DUP5 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH2 0x872 DUP5 PUSH2 0x7BD PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x86D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B82 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x823 PUSH2 0xDBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D PUSH2 0x8A1 PUSH2 0xDBF JUMP JUMPDEST DUP5 PUSH2 0x938 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x8B2 PUSH2 0xDBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x957 PUSH2 0x952 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x9AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B6 DUP3 DUP3 PUSH2 0x13BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAB4 PUSH2 0xAAF PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0x1577 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB25 PUSH2 0xB20 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0x15D1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB37 PUSH2 0xB32 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB96 DUP3 DUP3 PUSH2 0x162B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5D PUSH2 0xBA7 PUSH2 0xDBF JUMP JUMPDEST DUP5 PUSH2 0xC58 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C36 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xBD1 PUSH2 0xDBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7B PUSH2 0xC74 PUSH2 0xDBF JUMP JUMPDEST DUP5 DUP5 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP3 PUSH1 0x6 PUSH2 0x17E3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD39 PUSH2 0xD34 PUSH2 0xDBF JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDBB DUP3 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xFBE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C12 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xED3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AE9 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1044 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BED PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AA4 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B0B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11C8 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12E6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1313 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x145F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1474 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x14CB DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1334 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x158B DUP2 PUSH1 0x6 PUSH2 0x18C1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x15E5 DUP2 PUSH1 0x6 PUSH2 0x199C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BCC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AC7 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1274 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1773 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1A59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x186A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BAA PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18CB DUP3 DUP3 PUSH2 0x17E3 JUMP JUMPDEST ISZERO PUSH2 0x193E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x19A6 DUP3 DUP3 PUSH2 0x17E3 JUMP JUMPDEST PUSH2 0x19FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B61 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1274 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654D696E74 PUSH6 0x72526F6C653A KECCAK256 PUSH4 0x616C6C65 PUSH19 0x20646F6573206E6F7420686176652074686520 0x4D PUSH10 0x6E74657220726F6C6552 PUSH16 0x6C65733A206163636F756E7420646F65 PUSH20 0x206E6F74206861766520726F6C6545524332303A KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365526F6C65733A20616363 PUSH16 0x756E7420697320746865207A65726F20 PUSH2 0x6464 PUSH19 0x65737345524332303A206275726E2066726F6D KECCAK256 PUSH21 0x6865207A65726F206164647265737345524332303A KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x723158203E4AA20FC4F73A3C2828E0B469810CC62747386989986D COINBASE PUSH17 0x6DCEF41D37FA4864736F6C634300051100 ORIGIN ",
							"sourceMap": "150:631:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:631:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;740:81:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:149:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2580:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1639:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3187:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3187:300:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1568:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3882:207:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3882:207:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;332:103:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;332:103:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1786:108:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1786:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;934:85:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;934:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:90:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;697:90:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;793:77;;;:::i;:::-;;441:103:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;441:103:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4576:258:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4576:258:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2097:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2097:155:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;584:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;584:107:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2310:132:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2310:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;550:129:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;550:129:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;740:81:4;777:13;809:5;802:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;740:81;:::o;2580:149:3:-;2646:4;2662:39;2671:12;:10;:12::i;:::-;2685:7;2694:6;2662:8;:39::i;:::-;2718:4;2711:11;;2580:149;;;;:::o;1639:89::-;1683:7;1709:12;;1702:19;;1639:89;:::o;3187:300::-;3276:4;3292:36;3302:6;3310:9;3321:6;3292:9;:36::i;:::-;3338:121;3347:6;3355:12;:10;:12::i;:::-;3369:89;3407:6;3369:89;;;;;;;;;;;;;;;;;:11;:19;3381:6;3369:19;;;;;;;;;;;;;;;:33;3389:12;:10;:12::i;:::-;3369:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3338:8;:121::i;:::-;3476:4;3469:11;;3187:300;;;;;:::o;1568:81:4:-;1609:5;1633:9;;;;;;;;;;;1626:16;;1568:81;:::o;3882:207:3:-;3962:4;3978:83;3987:12;:10;:12::i;:::-;4001:7;4010:50;4049:10;4010:11;:25;4022:12;:10;:12::i;:::-;4010:25;;;;;;;;;;;;;;;:34;4036:7;4010:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3978:8;:83::i;:::-;4078:4;4071:11;;3882:207;;;;:::o;332:103:2:-;485:22:8;494:12;:10;:12::i;:::-;485:8;:22::i;:::-;477:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;406:22:2;412:7;421:6;406:5;:22::i;:::-;332:103;;:::o;1786:108:3:-;1843:7;1869:9;:18;1879:7;1869:18;;;;;;;;;;;;;;;;1862:25;;1786:108;;;:::o;934:85:4:-;973:13;1005:7;998:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:85;:::o;697:90:8:-;485:22;494:12;:10;:12::i;:::-;485:8;:22::i;:::-;477:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:19;772:7;761:10;:19::i;:::-;697:90;:::o;793:77::-;836:27;850:12;:10;:12::i;:::-;836:13;:27::i;:::-;793:77::o;441:103:2:-;485:22:8;494:12;:10;:12::i;:::-;485:8;:22::i;:::-;477:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:22:2;521:7;530:6;515:5;:22::i;:::-;441:103;;:::o;4576:258:3:-;4661:4;4677:129;4686:12;:10;:12::i;:::-;4700:7;4709:96;4748:15;4709:96;;;;;;;;;;;;;;;;;:11;:25;4721:12;:10;:12::i;:::-;4709:25;;;;;;;;;;;;;;;:34;4735:7;4709:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4677:8;:129::i;:::-;4823:4;4816:11;;4576:258;;;;:::o;2097:155::-;2166:4;2182:42;2192:12;:10;:12::i;:::-;2206:9;2217:6;2182:9;:42::i;:::-;2241:4;2234:11;;2097:155;;;;:::o;584:107:8:-;640:4;663:21;676:7;663:8;:12;;:21;;;;:::i;:::-;656:28;;584:107;;;:::o;2310:132:3:-;2382:7;2408:11;:18;2420:5;2408:18;;;;;;;;;;;;;;;:27;2427:7;2408:27;;;;;;;;;;;;;;;;2401:34;;2310:132;;;;:::o;550:129:2:-;485:22:8;494:12;:10;:12::i;:::-;485:8;:22::i;:::-;477:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:36:2;646:10;658:5;;;;;;;;;;;665:6;636:9;:36::i;:::-;550:129;;:::o;870:96:5:-;915:15;949:10;942:17;;870:96;:::o;7430:332:3:-;7540:1;7523:19;;:5;:19;;;;7515:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7620:1;7601:21;;:7;:21;;;;7593:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7702:6;7672:11;:18;7684:5;7672:18;;;;;;;;;;;;;;;:27;7691:7;7672:27;;;;;;;;;;;;;;;:36;;;;7739:7;7723:32;;7732:5;7723:32;;;7748:6;7723:32;;;;;;;;;;;;;;;;;;7430:332;;;:::o;5308:464::-;5423:1;5405:20;;:6;:20;;;;5397:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:1;5485:23;;:9;:23;;;;5477:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5579;5601:6;5579:71;;;;;;;;;;;;;;;;;:9;:17;5589:6;5579:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5559:9;:17;5569:6;5559:17;;;;;;;;;;;;;;;:91;;;;5683:32;5708:6;5683:9;:20;5693:9;5683:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5660:9;:20;5670:9;5660:20;;;;;;;;;;;;;;;:55;;;;5747:9;5730:35;;5739:6;5730:35;;;5758:6;5730:35;;;;;;;;;;;;;;;;;;5308:464;;;:::o;1816:187:7:-;1902:7;1934:1;1929;:6;;1937:12;1921:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1921:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:9;1976:1;1972;:5;1960:17;;1995:1;1988:8;;;1816:187;;;;;:::o;918:176::-;976:7;995:9;1011:1;1007;:5;995:17;;1035:1;1030;:6;;1022:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:1;1079:8;;;918:176;;;;:::o;6042:302:3:-;6136:1;6117:21;;:7;:21;;;;6109:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6200:24;6217:6;6200:12;;:16;;:24;;;;:::i;:::-;6185:12;:39;;;;6255:30;6278:6;6255:9;:18;6265:7;6255:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6234:9;:18;6244:7;6234:18;;;;;;;;;;;;;;;:51;;;;6321:7;6300:37;;6317:1;6300:37;;;6330:6;6300:37;;;;;;;;;;;;;;;;;;6042:302;;:::o;876:119:8:-;932:21;945:7;932:8;:12;;:21;;;;:::i;:::-;980:7;968:20;;;;;;;;;;;;876:119;:::o;1001:127::-;1060:24;1076:7;1060:8;:15;;:24;;;;:::i;:::-;1113:7;1099:22;;;;;;;;;;;;1001:127;:::o;6663:342:3:-;6757:1;6738:21;;:7;:21;;;;6730:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6829:68;6852:6;6829:68;;;;;;;;;;;;;;;;;:9;:18;6839:7;6829:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;6808:9;:18;6818:7;6808:18;;;;;;;;;;;;;;;:89;;;;6922:24;6939:6;6922:12;;:16;;:24;;;;:::i;:::-;6907:12;:39;;;;6987:1;6961:37;;6970:7;6961:37;;;6991:6;6961:37;;;;;;;;;;;;;;;;;;6663:342;;:::o;862:200:9:-;934:4;977:1;958:21;;:7;:21;;;;950:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:4;:11;;:20;1047:7;1035:20;;;;;;;;;;;;;;;;;;;;;;;;;1028:27;;862:200;;;;:::o;343:175::-;420:18;424:4;430:7;420:3;:18::i;:::-;419:19;411:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;507:4;484;:11;;:20;496:7;484:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;343:175;;:::o;593:180::-;672:18;676:4;682:7;672:3;:18::i;:::-;664:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:5;738:4;:11;;:20;750:7;738:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;593:180;;:::o;1358:134:7:-;1416:7;1442:43;1446:1;1449;1442:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1435:50;;1358:134;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1462200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addMinter(address)": "infinite",
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"burn(address,uint256)": "infinite",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"isMinter(address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceMinter()": "infinite",
								"stakeTransfer(address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "MSTORE"
								},
								{
									"begin": 239,
									"end": 326,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 239,
									"end": 326,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MLOAD"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "55434D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MLOAD"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP1"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "ADD"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "PUSH",
									"value": "55434D0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "DUP2"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "MSTORE"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "POP"
								},
								{
									"begin": 281,
									"end": 282,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 608,
									"end": 612,
									"name": "DUP3"
								},
								{
									"begin": 600,
									"end": 605,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "SWAP1"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "DUP1"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "MLOAD"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "SWAP1"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "ADD"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "SWAP1"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "SWAP3"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "SWAP2"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "SWAP1"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "JUMPDEST"
								},
								{
									"begin": 600,
									"end": 612,
									"name": "POP"
								},
								{
									"begin": 632,
									"end": 638,
									"name": "DUP2"
								},
								{
									"begin": 622,
									"end": 629,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "SWAP1"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "DUP1"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "MLOAD"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "SWAP1"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "ADD"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "SWAP1"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "SWAP3"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "SWAP2"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "SWAP1"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "JUMPDEST"
								},
								{
									"begin": 622,
									"end": 638,
									"name": "POP"
								},
								{
									"begin": 660,
									"end": 668,
									"name": "DUP1"
								},
								{
									"begin": 648,
									"end": 657,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 648,
									"end": 657,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "EXP"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "DUP2"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "SLOAD"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "DUP2"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "MUL"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "NOT"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "AND"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "SWAP1"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "DUP4"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "AND"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "MUL"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "OR"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "SWAP1"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "SSTORE"
								},
								{
									"begin": 648,
									"end": 668,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "POP"
								},
								{
									"begin": 512,
									"end": 675,
									"name": "POP"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 419,
									"end": 431,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 419,
									"end": 429,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 419,
									"end": 429,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 419,
									"end": 429,
									"name": "SHL"
								},
								{
									"begin": 419,
									"end": 431,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 419,
									"end": 431,
									"name": "SHR"
								},
								{
									"begin": 419,
									"end": 431,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 419,
									"end": 431,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 419,
									"end": 431,
									"name": "JUMPDEST"
								},
								{
									"begin": 408,
									"end": 418,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 408,
									"end": 418,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 408,
									"end": 418,
									"name": "SHL"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "SHR"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 408,
									"end": 432,
									"name": "JUMPDEST"
								},
								{
									"begin": 309,
									"end": 319,
									"name": "CALLER"
								},
								{
									"begin": 301,
									"end": 306,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 301,
									"end": 306,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "EXP"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "DUP2"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SLOAD"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "DUP2"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "MUL"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "NOT"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "AND"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SWAP1"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "DUP4"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "AND"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "MUL"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "OR"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SWAP1"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SSTORE"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "POP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP"
								},
								{
									"begin": 870,
									"end": 966,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 870,
									"end": 966,
									"name": "JUMPDEST"
								},
								{
									"begin": 915,
									"end": 930,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 949,
									"end": 959,
									"name": "CALLER"
								},
								{
									"begin": 942,
									"end": 959,
									"name": "SWAP1"
								},
								{
									"begin": 942,
									"end": 959,
									"name": "POP"
								},
								{
									"begin": 870,
									"end": 966,
									"name": "SWAP1"
								},
								{
									"begin": 870,
									"end": 966,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 876,
									"end": 995,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 876,
									"end": 995,
									"name": "JUMPDEST"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 945,
									"end": 952,
									"name": "DUP2"
								},
								{
									"begin": 932,
									"end": 940,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "SHL"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "PUSH [tag]",
									"value": "18446744073709551789"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "OR"
								},
								{
									"begin": 932,
									"end": 944,
									"name": "SWAP1"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "SWAP2"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "SWAP1"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "SHR"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 932,
									"end": 953,
									"name": "JUMPDEST"
								},
								{
									"begin": 980,
									"end": 987,
									"name": "DUP1"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "AND"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "PUSH",
									"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "MLOAD"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "MLOAD"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "DUP1"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "SWAP2"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "SUB"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "SWAP1"
								},
								{
									"begin": 968,
									"end": 988,
									"name": "LOG2"
								},
								{
									"begin": 876,
									"end": 995,
									"name": "POP"
								},
								{
									"begin": 876,
									"end": 995,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 343,
									"end": 518,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 343,
									"end": 518,
									"name": "JUMPDEST"
								},
								{
									"begin": 420,
									"end": 438,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 424,
									"end": 428,
									"name": "DUP3"
								},
								{
									"begin": 430,
									"end": 437,
									"name": "DUP3"
								},
								{
									"begin": 420,
									"end": 423,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 420,
									"end": 423,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 420,
									"end": 423,
									"name": "SHL"
								},
								{
									"begin": 420,
									"end": 438,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 420,
									"end": 438,
									"name": "SHR"
								},
								{
									"begin": 420,
									"end": 438,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 420,
									"end": 438,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 420,
									"end": 438,
									"name": "JUMPDEST"
								},
								{
									"begin": 419,
									"end": 438,
									"name": "ISZERO"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "JUMPI"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "MLOAD"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP2"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "MSTORE"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP3"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP2"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "SUB"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP3"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "MSTORE"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP2"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "MSTORE"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP2"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "MSTORE"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "POP"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "ADD"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "SWAP2"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "POP"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "POP"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "MLOAD"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "DUP1"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "SWAP2"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "SUB"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "SWAP1"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "REVERT"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 411,
									"end": 474,
									"name": "JUMPDEST"
								},
								{
									"begin": 507,
									"end": 511,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 484,
									"end": 488,
									"name": "DUP3"
								},
								{
									"begin": 484,
									"end": 495,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 484,
									"end": 495,
									"name": "ADD"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 496,
									"end": 503,
									"name": "DUP4"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "AND"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "AND"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "DUP2"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "MSTORE"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "ADD"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "SWAP1"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "DUP2"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "MSTORE"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "ADD"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "KECCAK256"
								},
								{
									"begin": 484,
									"end": 504,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "EXP"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "DUP2"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "SLOAD"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "DUP2"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "MUL"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "NOT"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "AND"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "SWAP1"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "DUP4"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "ISZERO"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "ISZERO"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "MUL"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "OR"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "SWAP1"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "SSTORE"
								},
								{
									"begin": 484,
									"end": 511,
									"name": "POP"
								},
								{
									"begin": 343,
									"end": 518,
									"name": "POP"
								},
								{
									"begin": 343,
									"end": 518,
									"name": "POP"
								},
								{
									"begin": 343,
									"end": 518,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "JUMPDEST"
								},
								{
									"begin": 934,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 977,
									"end": 978,
									"name": "DUP1"
								},
								{
									"begin": 958,
									"end": 979,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 958,
									"end": 979,
									"name": "AND"
								},
								{
									"begin": 958,
									"end": 965,
									"name": "DUP3"
								},
								{
									"begin": 958,
									"end": 979,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 958,
									"end": 979,
									"name": "AND"
								},
								{
									"begin": 958,
									"end": 979,
									"name": "EQ"
								},
								{
									"begin": 958,
									"end": 979,
									"name": "ISZERO"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH [tag]",
									"value": "27"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "JUMPI"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "MLOAD"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP2"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "MSTORE"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "ADD"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP1"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP1"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "ADD"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP3"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP2"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "SUB"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP3"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "MSTORE"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "22"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP2"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "MSTORE"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "ADD"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP1"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH data",
									"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "22"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "SWAP2"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "CODECOPY"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "ADD"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "SWAP2"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "POP"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "POP"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "MLOAD"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "DUP1"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "SWAP2"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "SUB"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "SWAP1"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "REVERT"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "tag",
									"value": "27"
								},
								{
									"begin": 950,
									"end": 1018,
									"name": "JUMPDEST"
								},
								{
									"begin": 1035,
									"end": 1039,
									"name": "DUP3"
								},
								{
									"begin": 1035,
									"end": 1046,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1046,
									"name": "ADD"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1054,
									"name": "DUP4"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "AND"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "AND"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "DUP2"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "MSTORE"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "ADD"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "SWAP1"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "DUP2"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "MSTORE"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "ADD"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "KECCAK256"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "SWAP1"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "SLOAD"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "SWAP1"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "EXP"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "SWAP1"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "DIV"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 1035,
									"end": 1055,
									"name": "AND"
								},
								{
									"begin": 1028,
									"end": 1055,
									"name": "SWAP1"
								},
								{
									"begin": 1028,
									"end": 1055,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "SWAP3"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "SWAP2"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 1062,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SLOAD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "AND"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ISZERO"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "MUL"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SUB"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "AND"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DIV"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "MSTORE"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "KECCAK256"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DIV"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "LT"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "29"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPI"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "MLOAD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "NOT"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "AND"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP4"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "OR"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP6"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SSTORE"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "29"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP6"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SSTORE"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ISZERO"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "28"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPI"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "30"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "GT"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ISZERO"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "31"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPI"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "MLOAD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SSTORE"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "30"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "31"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "28"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "POP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "POP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "32"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "33"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "32"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "POP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "33"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "34"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "35"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP3"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "GT"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ISZERO"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "36"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPI"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP2"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SSTORE"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "POP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "ADD"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [tag]",
									"value": "35"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "36"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "POP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "34"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "SWAP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "JUMPDEST"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "DUP1"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "CODECOPY"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 150,
									"end": 781,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203e4aa20fc4f73a3c2828e0b469810cc62747386989986d41706dcef41d37fa4864736f6c63430005110032",
									".code": [
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "MSTORE"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "POP"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "LT"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "SHR"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "GT"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "GT"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "AA271E1A"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "EBC3ADCD"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMP"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "983B2D56"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "98650275"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "9DC29FAC"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMP"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "GT"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMP"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "EQ"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPI"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "JUMPDEST"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "DUP1"
										},
										{
											"begin": 150,
											"end": 781,
											"name": "REVERT"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP3"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SUB"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP3"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MSTORE"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP4"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MSTORE"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP4"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "ISZERO"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMPI"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP3"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SUB"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP4"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SUB"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "EXP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SUB"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "NOT"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MSTORE"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "ADD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP3"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "MLOAD"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "DUP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP2"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SUB"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "RETURN"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "AND"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "MLOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "MSTORE"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "MLOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SUB"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "RETURN"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "MLOAD"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP3"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP2"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "MSTORE"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "ADD"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP2"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "POP"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "POP"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "MLOAD"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP2"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SUB"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "RETURN"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "AND"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "AND"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "MLOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "MSTORE"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "MLOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SUB"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "RETURN"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "MLOAD"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "DUP3"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "AND"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "AND"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "MSTORE"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "ADD"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "SWAP2"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "MLOAD"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "SWAP2"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "SUB"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "RETURN"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "AND"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "MLOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "MSTORE"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "MLOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SUB"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "RETURN"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "JUMPDEST"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "DUP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "DUP2"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "ADD"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "DUP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "DUP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "AND"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "ADD"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP3"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP2"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "DUP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "ADD"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP3"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP2"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "SWAP1"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "JUMPDEST"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "STOP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP3"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "MLOAD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP3"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "MSTORE"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "MLOAD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SUB"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "RETURN"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "ISZERO"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMPI"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP3"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP4"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "EXP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "NOT"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "AND"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MSTORE"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "ADD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP3"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "MLOAD"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "DUP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP2"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SUB"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "RETURN"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "DUP2"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "AND"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SWAP3"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SWAP2"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "STOP"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "JUMPDEST"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "JUMPDEST"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "STOP"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "ADD"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "ADD"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP3"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "ADD"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP3"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "STOP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMPDEST"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "AND"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMPDEST"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "MLOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "MSTORE"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "MLOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SUB"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "RETURN"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "AND"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "MLOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "MSTORE"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "MLOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SUB"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "RETURN"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "JUMPDEST"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP2"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "AND"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP3"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP2"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "JUMPDEST"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "MLOAD"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP3"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ISZERO"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP2"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "MSTORE"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "ADD"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP2"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "MLOAD"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "DUP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP2"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SUB"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "RETURN"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMPDEST"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "AND"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "AND"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMPDEST"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "MLOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "MSTORE"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "MLOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SUB"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "RETURN"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "DUP2"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "AND"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP3"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "ADD"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP3"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP2"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "SWAP1"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "STOP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMPDEST"
										},
										{
											"begin": 777,
											"end": 790,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 809,
											"end": 814,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SLOAD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MUL"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SUB"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DIV"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DIV"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MUL"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MLOAD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP3"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SLOAD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MUL"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SUB"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DIV"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPI"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "LT"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPI"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP4"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SLOAD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DIV"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MUL"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP4"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMP"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "KECCAK256"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SLOAD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP4"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "GT"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPI"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SUB"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "AND"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 814,
											"name": "POP"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 740,
											"end": 821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMPDEST"
										},
										{
											"begin": 2646,
											"end": 2650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2671,
											"end": 2681,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "JUMPDEST"
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP5"
										},
										{
											"begin": 2694,
											"end": 2700,
											"name": "DUP5"
										},
										{
											"begin": 2662,
											"end": 2670,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "JUMPDEST"
										},
										{
											"begin": 2718,
											"end": 2722,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "SLOAD"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "POP"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "DUP5"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP5"
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "DUP5"
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "JUMPDEST"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "DUP5"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "JUMPDEST"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "DUP6"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "MLOAD"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "DUP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "DUP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "CODECOPY"
										},
										{
											"begin": 3369,
											"end": 3380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP12"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "KECCAK256"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3389,
											"end": 3399,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "JUMPDEST"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "KECCAK256"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "SLOAD"
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP3"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "JUMPDEST"
										},
										{
											"begin": 3338,
											"end": 3346,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "JUMPDEST"
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "SWAP1"
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP4"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "JUMPDEST"
										},
										{
											"begin": 1609,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "SLOAD"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "EXP"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "DIV"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1633,
											"end": 1642,
											"name": "AND"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "SWAP1"
										},
										{
											"begin": 1626,
											"end": 1642,
											"name": "POP"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1649,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 3987,
											"end": 3997,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "JUMPDEST"
										},
										{
											"begin": 4001,
											"end": 4008,
											"name": "DUP5"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 4049,
											"end": 4059,
											"name": "DUP6"
										},
										{
											"begin": 4010,
											"end": 4021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 4022,
											"end": 4032,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "KECCAK256"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4043,
											"name": "DUP10"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "KECCAK256"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "SLOAD"
										},
										{
											"begin": 4010,
											"end": 4048,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 4010,
											"end": 4048,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "SWAP2"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "JUMPDEST"
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4071,
											"end": 4082,
											"name": "SWAP1"
										},
										{
											"begin": 4071,
											"end": 4082,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 494,
											"end": 504,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH data",
											"value": "79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "CODECOPY"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "REVERT"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPDEST"
										},
										{
											"begin": 406,
											"end": 428,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "DUP3"
										},
										{
											"begin": 421,
											"end": 427,
											"name": "DUP3"
										},
										{
											"begin": 406,
											"end": 411,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 406,
											"end": 428,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 406,
											"end": 428,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 406,
											"end": 428,
											"name": "JUMPDEST"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "POP"
										},
										{
											"begin": 332,
											"end": 435,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP1"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "DUP4"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "AND"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "AND"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP2"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "MSTORE"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP2"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "MSTORE"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "KECCAK256"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "SLOAD"
										},
										{
											"begin": 1862,
											"end": 1887,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1887,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 986,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1005,
											"end": 1012,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SLOAD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "AND"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ISZERO"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MUL"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "AND"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DIV"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DIV"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MUL"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MLOAD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP3"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SLOAD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "AND"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ISZERO"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MUL"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "AND"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DIV"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ISZERO"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMPI"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "LT"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMPI"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP4"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SLOAD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DIV"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MUL"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP4"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMP"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "KECCAK256"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SLOAD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "MSTORE"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP4"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "GT"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMPI"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SUB"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "AND"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP2"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "SWAP1"
										},
										{
											"begin": 934,
											"end": 1019,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 494,
											"end": 504,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH data",
											"value": "79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "CODECOPY"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "REVERT"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPDEST"
										},
										{
											"begin": 761,
											"end": 780,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 772,
											"end": 779,
											"name": "DUP2"
										},
										{
											"begin": 761,
											"end": 771,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 761,
											"end": 780,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 780,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 761,
											"end": 780,
											"name": "JUMPDEST"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 697,
											"end": 787,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "JUMPDEST"
										},
										{
											"begin": 836,
											"end": 863,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 850,
											"end": 860,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 850,
											"end": 862,
											"name": "JUMPDEST"
										},
										{
											"begin": 836,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 836,
											"end": 863,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 863,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 836,
											"end": 863,
											"name": "JUMPDEST"
										},
										{
											"begin": 793,
											"end": 870,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 494,
											"end": 504,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH data",
											"value": "79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "CODECOPY"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "REVERT"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 537,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 521,
											"end": 528,
											"name": "DUP3"
										},
										{
											"begin": 530,
											"end": 536,
											"name": "DUP3"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 515,
											"end": 537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 537,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 515,
											"end": 537,
											"name": "JUMPDEST"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 441,
											"end": 544,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMPDEST"
										},
										{
											"begin": 4661,
											"end": 4665,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 4686,
											"end": 4696,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "JUMPDEST"
										},
										{
											"begin": 4700,
											"end": 4707,
											"name": "DUP5"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 4748,
											"end": 4763,
											"name": "DUP6"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "MLOAD"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "DUP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "DUP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP2"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "CODECOPY"
										},
										{
											"begin": 4709,
											"end": 4720,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 4721,
											"end": 4731,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "JUMPDEST"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "KECCAK256"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4742,
											"name": "DUP11"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "KECCAK256"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "SLOAD"
										},
										{
											"begin": 4709,
											"end": 4747,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 4709,
											"end": 4747,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP3"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP2"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "JUMPDEST"
										},
										{
											"begin": 4677,
											"end": 4685,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "JUMPDEST"
										},
										{
											"begin": 4823,
											"end": 4827,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "SWAP1"
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2192,
											"end": 2202,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "JUMPDEST"
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "DUP5"
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP5"
										},
										{
											"begin": 2182,
											"end": 2191,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "JUMPDEST"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "JUMPDEST"
										},
										{
											"begin": 640,
											"end": 644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP3"
										},
										{
											"begin": 663,
											"end": 671,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 663,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 663,
											"end": 675,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "SWAP2"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "AND"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 663,
											"end": 684,
											"name": "JUMPDEST"
										},
										{
											"begin": 656,
											"end": 684,
											"name": "SWAP1"
										},
										{
											"begin": 656,
											"end": 684,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP2"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "SWAP1"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "POP"
										},
										{
											"begin": 584,
											"end": 691,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMPDEST"
										},
										{
											"begin": 2382,
											"end": 2389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP5"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "KECCAK256"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "DUP4"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "SWAP1"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "KECCAK256"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "SLOAD"
										},
										{
											"begin": 2401,
											"end": 2435,
											"name": "SWAP1"
										},
										{
											"begin": 2401,
											"end": 2435,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 494,
											"end": 504,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 494,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 493,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 485,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP3"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH data",
											"value": "79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "30"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "CODECOPY"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "ADD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "MLOAD"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP2"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SUB"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "SWAP1"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "REVERT"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 477,
											"end": 560,
											"name": "JUMPDEST"
										},
										{
											"begin": 636,
											"end": 672,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 646,
											"end": 656,
											"name": "DUP3"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "SLOAD"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "EXP"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DIV"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "AND"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP4"
										},
										{
											"begin": 636,
											"end": 645,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 636,
											"end": 672,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 672,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 636,
											"end": 672,
											"name": "JUMPDEST"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "POP"
										},
										{
											"begin": 550,
											"end": 679,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 915,
											"end": 930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "CALLER"
										},
										{
											"begin": 942,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "JUMPDEST"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7523,
											"end": 7528,
											"name": "DUP4"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "EQ"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "ISZERO"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "JUMPI"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MLOAD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MSTORE"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP3"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SUB"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP3"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MSTORE"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MSTORE"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "CODECOPY"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "POP"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "POP"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MLOAD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SUB"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "REVERT"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "JUMPDEST"
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP3"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "EQ"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "ISZERO"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SUB"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "CODECOPY"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SUB"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "REVERT"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST"
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "DUP1"
										},
										{
											"begin": 7672,
											"end": 7683,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7689,
											"name": "DUP6"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "SWAP1"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "KECCAK256"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7698,
											"name": "DUP5"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "SWAP1"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "KECCAK256"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "SWAP1"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "SSTORE"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "POP"
										},
										{
											"begin": 7739,
											"end": 7746,
											"name": "DUP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "AND"
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "DUP4"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "AND"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7748,
											"end": 7754,
											"name": "DUP4"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "MLOAD"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP1"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP3"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "MSTORE"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "ADD"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "POP"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "POP"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "MLOAD"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP1"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SUB"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP1"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "LOG3"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "POP"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "POP"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "POP"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "JUMPDEST"
										},
										{
											"begin": 5423,
											"end": 5424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5411,
											"name": "DUP4"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "EQ"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "JUMPI"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "CODECOPY"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "REVERT"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "JUMPDEST"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "AND"
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "DUP3"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "AND"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "EQ"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "ISZERO"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "JUMPI"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP3"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SUB"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP3"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "CODECOPY"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SUB"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "REVERT"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "JUMPDEST"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "MLOAD"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DUP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DUP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "CODECOPY"
										},
										{
											"begin": 5579,
											"end": 5588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP8"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "AND"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "AND"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "SWAP1"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "KECCAK256"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "SLOAD"
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "SWAP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP3"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "AND"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP1"
										},
										{
											"begin": 5569,
											"end": 5575,
											"name": "DUP6"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "KECCAK256"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "SSTORE"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "POP"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "DUP1"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP6"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "ADD"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "ADD"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "KECCAK256"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "SLOAD"
										},
										{
											"begin": 5683,
											"end": 5707,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5683,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "SWAP2"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "JUMPDEST"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "DUP1"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP5"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "AND"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "AND"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "KECCAK256"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "SSTORE"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "POP"
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "DUP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "AND"
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP4"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "AND"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5758,
											"end": 5764,
											"name": "DUP4"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "MLOAD"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP1"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP3"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "MSTORE"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "ADD"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SWAP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "POP"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "POP"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "MLOAD"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP1"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SWAP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SUB"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SWAP1"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "LOG3"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "POP"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "POP"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "POP"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1902,
											"end": 1909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "DUP4"
										},
										{
											"begin": 1929,
											"end": 1930,
											"name": "DUP4"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "GT"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "ISZERO"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPI"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "AND"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ISZERO"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPI"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "EXP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "NOT"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "AND"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "REVERT"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "DUP4"
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "DUP6"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "SUB"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "POP"
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "DUP1"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "SWAP2"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "SWAP4"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "SWAP3"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "JUMPDEST"
										},
										{
											"begin": 976,
											"end": 983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1004,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "DUP5"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 995,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 995,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP4"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "LT"
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "ISZERO"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "REVERT"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP1"
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "SWAP2"
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP"
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "SWAP3"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "SWAP2"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6042,
											"end": 6344,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 6042,
											"end": 6344,
											"name": "JUMPDEST"
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "AND"
										},
										{
											"begin": 6117,
											"end": 6124,
											"name": "DUP3"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "AND"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "EQ"
										},
										{
											"begin": 6117,
											"end": 6138,
											"name": "ISZERO"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "JUMPI"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "MLOAD"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "MSTORE"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "ADD"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP1"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP1"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "ADD"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP3"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "SUB"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP3"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "MSTORE"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "MSTORE"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "ADD"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP1"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP2"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "MSTORE"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "POP"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "ADD"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "SWAP2"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "POP"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "POP"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "MLOAD"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "DUP1"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "SWAP2"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "SUB"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "SWAP1"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "REVERT"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 6109,
											"end": 6174,
											"name": "JUMPDEST"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP2"
										},
										{
											"begin": 6200,
											"end": 6212,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6200,
											"end": 6212,
											"name": "SLOAD"
										},
										{
											"begin": 6200,
											"end": 6216,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 6200,
											"end": 6216,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "SWAP2"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "SWAP1"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "AND"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 6200,
											"end": 6224,
											"name": "JUMPDEST"
										},
										{
											"begin": 6185,
											"end": 6197,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6185,
											"end": 6224,
											"name": "DUP2"
										},
										{
											"begin": 6185,
											"end": 6224,
											"name": "SWAP1"
										},
										{
											"begin": 6185,
											"end": 6224,
											"name": "SSTORE"
										},
										{
											"begin": 6185,
											"end": 6224,
											"name": "POP"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6278,
											"end": 6284,
											"name": "DUP2"
										},
										{
											"begin": 6255,
											"end": 6264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "DUP1"
										},
										{
											"begin": 6265,
											"end": 6272,
											"name": "DUP6"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "AND"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "AND"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "DUP2"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "MSTORE"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "ADD"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "SWAP1"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "DUP2"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "MSTORE"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "ADD"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "KECCAK256"
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "SLOAD"
										},
										{
											"begin": 6255,
											"end": 6277,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 6255,
											"end": 6277,
											"name": "SWAP1"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "SWAP2"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "SWAP1"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "AND"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "JUMPDEST"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "DUP1"
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "DUP5"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "AND"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "AND"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "DUP2"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "MSTORE"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "ADD"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "SWAP1"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "DUP2"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "MSTORE"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "ADD"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6252,
											"name": "KECCAK256"
										},
										{
											"begin": 6234,
											"end": 6285,
											"name": "DUP2"
										},
										{
											"begin": 6234,
											"end": 6285,
											"name": "SWAP1"
										},
										{
											"begin": 6234,
											"end": 6285,
											"name": "SSTORE"
										},
										{
											"begin": 6234,
											"end": 6285,
											"name": "POP"
										},
										{
											"begin": 6321,
											"end": 6328,
											"name": "DUP2"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "AND"
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "AND"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP4"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "DUP1"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "DUP3"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "DUP2"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "MSTORE"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "ADD"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "SWAP2"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "POP"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "POP"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "DUP1"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "SWAP2"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "SUB"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "SWAP1"
										},
										{
											"begin": 6300,
											"end": 6337,
											"name": "LOG3"
										},
										{
											"begin": 6042,
											"end": 6344,
											"name": "POP"
										},
										{
											"begin": 6042,
											"end": 6344,
											"name": "POP"
										},
										{
											"begin": 6042,
											"end": 6344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 876,
											"end": 995,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 876,
											"end": 995,
											"name": "JUMPDEST"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 932,
											"end": 940,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 932,
											"end": 944,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 932,
											"end": 944,
											"name": "SWAP1"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "SWAP2"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "SWAP1"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "AND"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 932,
											"end": 953,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 987,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "PUSH",
											"value": "6AE172837EA30B801FBFCDD4108AA1D5BF8FF775444FD70256B44E6BF3DFC3F6"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "MLOAD"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "MLOAD"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "SWAP2"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "SUB"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 988,
											"name": "LOG2"
										},
										{
											"begin": 876,
											"end": 995,
											"name": "POP"
										},
										{
											"begin": 876,
											"end": 995,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1001,
											"end": 1128,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 1001,
											"end": 1128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 1076,
											"end": 1083,
											"name": "DUP2"
										},
										{
											"begin": 1060,
											"end": 1068,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1060,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 1060,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "SWAP2"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "AND"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 1060,
											"end": 1084,
											"name": "JUMPDEST"
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP1"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "AND"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "PUSH",
											"value": "E94479A9F7E1952CC78F2D6BAAB678ADC1B772D936C6583DEF489E524CB66692"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "MLOAD"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "MLOAD"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "DUP1"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "SWAP2"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "SUB"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 1099,
											"end": 1121,
											"name": "LOG2"
										},
										{
											"begin": 1001,
											"end": 1128,
											"name": "POP"
										},
										{
											"begin": 1001,
											"end": 1128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6663,
											"end": 7005,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 6663,
											"end": 7005,
											"name": "JUMPDEST"
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "AND"
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "DUP3"
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "AND"
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "EQ"
										},
										{
											"begin": 6738,
											"end": 6759,
											"name": "ISZERO"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "JUMPI"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "MLOAD"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP2"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "MSTORE"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "ADD"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP1"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP1"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "ADD"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP3"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP2"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "SUB"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP3"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "MSTORE"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP2"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "MSTORE"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "ADD"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP1"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH data",
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "SWAP2"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "CODECOPY"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "ADD"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "SWAP2"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "POP"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "POP"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "MLOAD"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "DUP1"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "SWAP2"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "SUB"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "SWAP1"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "REVERT"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 6730,
											"end": 6797,
											"name": "JUMPDEST"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP2"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "MLOAD"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "DUP1"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "ADD"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "MSTORE"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "DUP1"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "DUP2"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "MSTORE"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "ADD"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH data",
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "SWAP2"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "CODECOPY"
										},
										{
											"begin": 6829,
											"end": 6838,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "DUP1"
										},
										{
											"begin": 6839,
											"end": 6846,
											"name": "DUP7"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "AND"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "AND"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "DUP2"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "MSTORE"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "ADD"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "SWAP1"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "DUP2"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "MSTORE"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "ADD"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "KECCAK256"
										},
										{
											"begin": 6829,
											"end": 6847,
											"name": "SLOAD"
										},
										{
											"begin": 6829,
											"end": 6851,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 6829,
											"end": 6851,
											"name": "SWAP1"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "SWAP3"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "SWAP2"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "SWAP1"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "AND"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 6829,
											"end": 6897,
											"name": "JUMPDEST"
										},
										{
											"begin": 6808,
											"end": 6817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "DUP1"
										},
										{
											"begin": 6818,
											"end": 6825,
											"name": "DUP5"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "AND"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "AND"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "DUP2"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "MSTORE"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "ADD"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "SWAP1"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "DUP2"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "MSTORE"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "ADD"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "KECCAK256"
										},
										{
											"begin": 6808,
											"end": 6897,
											"name": "DUP2"
										},
										{
											"begin": 6808,
											"end": 6897,
											"name": "SWAP1"
										},
										{
											"begin": 6808,
											"end": 6897,
											"name": "SSTORE"
										},
										{
											"begin": 6808,
											"end": 6897,
											"name": "POP"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP2"
										},
										{
											"begin": 6922,
											"end": 6934,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6922,
											"end": 6934,
											"name": "SLOAD"
										},
										{
											"begin": 6922,
											"end": 6938,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 6922,
											"end": 6938,
											"name": "SWAP1"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "SWAP2"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "SWAP1"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "AND"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 6922,
											"end": 6946,
											"name": "JUMPDEST"
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6907,
											"end": 6946,
											"name": "DUP2"
										},
										{
											"begin": 6907,
											"end": 6946,
											"name": "SWAP1"
										},
										{
											"begin": 6907,
											"end": 6946,
											"name": "SSTORE"
										},
										{
											"begin": 6907,
											"end": 6946,
											"name": "POP"
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "AND"
										},
										{
											"begin": 6970,
											"end": 6977,
											"name": "DUP3"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "AND"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "DUP4"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "MLOAD"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "DUP1"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "DUP3"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "DUP2"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "MSTORE"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "ADD"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "SWAP2"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "POP"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "POP"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "MLOAD"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "DUP1"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "SWAP2"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "SUB"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "SWAP1"
										},
										{
											"begin": 6961,
											"end": 6998,
											"name": "LOG3"
										},
										{
											"begin": 6663,
											"end": 7005,
											"name": "POP"
										},
										{
											"begin": 6663,
											"end": 7005,
											"name": "POP"
										},
										{
											"begin": 6663,
											"end": 7005,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "JUMPDEST"
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 977,
											"end": 978,
											"name": "DUP1"
										},
										{
											"begin": 958,
											"end": 979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 979,
											"name": "AND"
										},
										{
											"begin": 958,
											"end": 965,
											"name": "DUP3"
										},
										{
											"begin": 958,
											"end": 979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 958,
											"end": 979,
											"name": "AND"
										},
										{
											"begin": 958,
											"end": 979,
											"name": "EQ"
										},
										{
											"begin": 958,
											"end": 979,
											"name": "ISZERO"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "JUMPI"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "MLOAD"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP2"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "MSTORE"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "ADD"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "ADD"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP3"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP2"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "SUB"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP3"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "MSTORE"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP2"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "MSTORE"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "ADD"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH data",
											"value": "9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "SWAP2"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "CODECOPY"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "ADD"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "SWAP2"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "MLOAD"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "DUP1"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "SWAP2"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "SUB"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "SWAP1"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "REVERT"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 950,
											"end": 1018,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1039,
											"name": "DUP3"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "ADD"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1054,
											"name": "DUP4"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "AND"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "AND"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "MSTORE"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "ADD"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "DUP2"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "MSTORE"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "ADD"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "KECCAK256"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "SLOAD"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "EXP"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "DIV"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "AND"
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "SWAP3"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 1062,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 343,
											"end": 518,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 343,
											"end": 518,
											"name": "JUMPDEST"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 424,
											"end": 428,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 437,
											"name": "DUP3"
										},
										{
											"begin": 420,
											"end": 423,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "JUMPDEST"
										},
										{
											"begin": 419,
											"end": 438,
											"name": "ISZERO"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "JUMPI"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP3"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "SUB"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP3"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP2"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "MSTORE"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "ADD"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "POP"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "MLOAD"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "DUP1"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "SWAP2"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "SUB"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "SWAP1"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "REVERT"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 411,
											"end": 474,
											"name": "JUMPDEST"
										},
										{
											"begin": 507,
											"end": 511,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 484,
											"end": 488,
											"name": "DUP3"
										},
										{
											"begin": 484,
											"end": 495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 495,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 503,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "MSTORE"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "ADD"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "KECCAK256"
										},
										{
											"begin": 484,
											"end": 504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "EXP"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SLOAD"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP2"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "NOT"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "AND"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "DUP4"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "ISZERO"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "MUL"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "OR"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SWAP1"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "SSTORE"
										},
										{
											"begin": 484,
											"end": 511,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 343,
											"end": 518,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "JUMPDEST"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 676,
											"end": 680,
											"name": "DUP3"
										},
										{
											"begin": 682,
											"end": 689,
											"name": "DUP3"
										},
										{
											"begin": 672,
											"end": 675,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 672,
											"end": 690,
											"name": "JUMPDEST"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "JUMPI"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP3"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "SUB"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP3"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH data",
											"value": "7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "CODECOPY"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "SWAP2"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "SUB"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "SWAP1"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "REVERT"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 664,
											"end": 728,
											"name": "JUMPDEST"
										},
										{
											"begin": 761,
											"end": 766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 742,
											"name": "DUP3"
										},
										{
											"begin": 738,
											"end": 749,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 749,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 750,
											"end": 757,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "MSTORE"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "ADD"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "KECCAK256"
										},
										{
											"begin": 738,
											"end": 758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "EXP"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "SLOAD"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "DUP2"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "NOT"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "AND"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "DUP4"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "ISZERO"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "MUL"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "OR"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "SWAP1"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "SSTORE"
										},
										{
											"begin": 738,
											"end": 766,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "JUMPDEST"
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "DUP4"
										},
										{
											"begin": 1449,
											"end": 1450,
											"name": "DUP4"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "MLOAD"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "DUP1"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "ADD"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "MSTORE"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "DUP1"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "DUP2"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "MSTORE"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "ADD"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "DUP2"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "MSTORE"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "POP"
										},
										{
											"begin": 1442,
											"end": 1445,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 1442,
											"end": 1485,
											"name": "JUMPDEST"
										},
										{
											"begin": 1435,
											"end": 1485,
											"name": "SWAP1"
										},
										{
											"begin": 1435,
											"end": 1485,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "SWAP3"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "SWAP2"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1492,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"79ECB50133735B20228DEA9D08FE36A462BBC1350F591A146908848DB91104CD": "4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65",
										"7BD893145AC435F339BB7C288622D270324B7033B011F693ACA172F5CBC3C257": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								},
								"9D214FA89563F4E6456A3929327E54500EA1CDE2C0BA9FB2035EC106190D682F": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373"
							}
						},
						"methodIdentifiers": {
							"addMinter(address)": "983b2d56",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"isMinter(address)": "aa271e1a",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceMinter()": "98650275",
							"stakeTransfer(address,uint256)": "ebc3adcd",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"UCMToken.sol\":\"UCMToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"UCMToken.sol\":{\"keccak256\":\"0x45d17b588ce54ecbee037a4e9bd7e2ee99be110dbc26e80c1783ea1d067146ad\",\"urls\":[\"bzz-raw://8de1665df03ce5b98b6b5e913c7a529d6408c99a26351bebe009c14d643d2d85\",\"dweb:/ipfs/Qmet5CJpy8qtZ3VcDSPmuJ13Z4vUpUn4qEfAdxEKtGucB9\"]},\"openzeppelin/ERC20.sol\":{\"keccak256\":\"0xdf6a0b14735e1306a712f53b25b2b2c5cf1ade022e3bd16b19031e60d9a05db2\",\"urls\":[\"bzz-raw://447e6129ed071364c2149c4819fe39ab4262d49b8284bf33700edc6e3d65f751\",\"dweb:/ipfs/QmVF1aCzrEk6X81p36sMvjJp6mDuaMpAvGRwb72HnfPRTd\"]},\"openzeppelin/ERC20Detailed.sol\":{\"keccak256\":\"0xcd32454b8ec5f73a3258f95654ae624106e983156d9df0316213f3abc6bb033a\",\"urls\":[\"bzz-raw://3385af1dc163ef05b9ca78d898d26c3b65f76547b413eef8b00d5264c8b7b7a4\",\"dweb:/ipfs/QmTkyhiSJEXgiXHd8EihuQEri613mCXeSnMBBYMgVJDFRV\"]},\"openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x80987e1294f2d1b2deef6b0c73e7ef3416831bd938b6f9d824c21583cd50517f\",\"urls\":[\"bzz-raw://19297a2b3e7d4aeb33b8e0180e96e6a427ac1cef844828087668adedce7ea2f3\",\"dweb:/ipfs/QmZ3j76xF8ZHMwLCkPnF2btugcDRymDH3xXQym26aBvSKn\"]},\"openzeppelin/IERC20.sol\":{\"keccak256\":\"0x694b989b371044e7a6730ce6d4b3da45679b7d5a5ff57cb6d6d84d567add5312\",\"urls\":[\"bzz-raw://529be491ce5d5ff6de81273a85d17fdd0a7e1f50121b7a8b886f3612ad39caa1\",\"dweb:/ipfs/Qmd2KFSZtkSeyUES6z2c2UdZhMQ6AgKLz6DXkqX5ApyfFE\"]},\"openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x4424fbd3867daab73c27b540b229440a2674cb06ef6af869a68fb4df779c6c88\",\"urls\":[\"bzz-raw://145f661fede2b29cfc68e89c98ce835bc187a80b5ba1c20dc4b10612036c8ef9\",\"dweb:/ipfs/QmaZcvyrSQsFpmG83qHZZeHVZKdGxRz2p2PKfw447cxTZh\"]},\"openzeppelin/roles/MinterRole.sol\":{\"keccak256\":\"0xc15538d901d9f5a10b8d67aa8ef17aa799dc29bff292cb4fa7b0a3f36293dfff\",\"urls\":[\"bzz-raw://43a99428c9e5367f67c002a9c09d208aa12fe50a0c15ddbe80d5cbbe56945966\",\"dweb:/ipfs/QmVMDuuxPyEVEJTW9nVVu8L3rT7CdM8B8Nb4bvRFes7huR\"]},\"openzeppelin/roles/Roles.sol\":{\"keccak256\":\"0xd465b78997ef5912e0558bd44e254b1c27fd0d8067adf07e9888dd1863d1a859\",\"urls\":[\"bzz-raw://dcbbca346990a75ef42d9c85127999911bca8e4b2c68a7106cfe1cd470df0647\",\"dweb:/ipfs/QmVCigQe8sXKQA7Q8qDye49XJKapKJmBu8fZTfTrLLyunt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 226,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 232,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 234,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 622,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 624,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 626,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 975,
								"contract": "UCMToken.sol:UCMToken",
								"label": "_minters",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Role)1070_storage"
							},
							{
								"astId": 137,
								"contract": "UCMToken.sol:UCMToken",
								"label": "owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Role)1070_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 1069,
										"contract": "UCMToken.sol:UCMToken",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin/ERC20.sol\":1348:8171  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin/ERC20.sol\":1348:8171  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"openzeppelin/ERC20.sol\":1348:8171  contract ERC20 is Context, IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":1639:1728  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n    tag_14:\n        /* \"openzeppelin/ERC20.sol\":2646:2650  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2662:2701  _approve(_msgSender(), spender, amount) */\n      tag_36\n        /* \"openzeppelin/ERC20.sol\":2671:2683  _msgSender() */\n      tag_37\n        /* \"openzeppelin/ERC20.sol\":2671:2681  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":2671:2683  _msgSender() */\n      jump\t// in\n    tag_37:\n        /* \"openzeppelin/ERC20.sol\":2685:2692  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2694:2700  amount */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2662:2670  _approve */\n      tag_39\n        /* \"openzeppelin/ERC20.sol\":2662:2701  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_36:\n        /* \"openzeppelin/ERC20.sol\":2718:2722  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":2711:2722  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":2580:2729  function approve(address spender, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":1639:1728  function totalSupply() public view returns (uint256) {... */\n    tag_16:\n        /* \"openzeppelin/ERC20.sol\":1683:1690  uint256 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":1709:1721  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin/ERC20.sol\":1702:1721  return _totalSupply */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":1639:1728  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_19:\n        /* \"openzeppelin/ERC20.sol\":3276:3280  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3292:3328  _transfer(sender, recipient, amount) */\n      tag_42\n        /* \"openzeppelin/ERC20.sol\":3302:3308  sender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3310:3319  recipient */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3321:3327  amount */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3292:3301  _transfer */\n      tag_43\n        /* \"openzeppelin/ERC20.sol\":3292:3328  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_42:\n        /* \"openzeppelin/ERC20.sol\":3338:3459  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_44\n        /* \"openzeppelin/ERC20.sol\":3347:3353  sender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":3355:3367  _msgSender() */\n      tag_45\n        /* \"openzeppelin/ERC20.sol\":3355:3365  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":3355:3367  _msgSender() */\n      jump\t// in\n    tag_45:\n        /* \"openzeppelin/ERC20.sol\":3369:3458  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_46\n        /* \"openzeppelin/ERC20.sol\":3407:3413  amount */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":3369:3458  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":3369:3380  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":3369:3388  _allowances[sender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3381:3387  sender */\n      dup12\n        /* \"openzeppelin/ERC20.sol\":3369:3388  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":3369:3402  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3389:3401  _msgSender() */\n      tag_47\n        /* \"openzeppelin/ERC20.sol\":3389:3399  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":3389:3401  _msgSender() */\n      jump\t// in\n    tag_47:\n        /* \"openzeppelin/ERC20.sol\":3369:3402  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":3369:3406  _allowances[sender][_msgSender()].sub */\n      tag_48\n      swap1\n        /* \"openzeppelin/ERC20.sol\":3369:3458  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \"openzeppelin/ERC20.sol\":3338:3346  _approve */\n      tag_39\n        /* \"openzeppelin/ERC20.sol\":3338:3459  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_44:\n        /* \"openzeppelin/ERC20.sol\":3476:3480  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":3469:3480  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":3187:3487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_22:\n        /* \"openzeppelin/ERC20.sol\":3962:3966  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":3978:4061  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_50\n        /* \"openzeppelin/ERC20.sol\":3987:3999  _msgSender() */\n      tag_51\n        /* \"openzeppelin/ERC20.sol\":3987:3997  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":3987:3999  _msgSender() */\n      jump\t// in\n    tag_51:\n        /* \"openzeppelin/ERC20.sol\":4001:4008  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":4010:4060  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_52\n        /* \"openzeppelin/ERC20.sol\":4049:4059  addedValue */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":4010:4021  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4010:4035  _allowances[_msgSender()] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4022:4034  _msgSender() */\n      tag_53\n        /* \"openzeppelin/ERC20.sol\":4022:4032  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":4022:4034  _msgSender() */\n      jump\t// in\n    tag_53:\n        /* \"openzeppelin/ERC20.sol\":4010:4035  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":4010:4044  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4036:4043  spender */\n      dup10\n        /* \"openzeppelin/ERC20.sol\":4010:4044  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":4010:4048  _allowances[_msgSender()][spender].add */\n      tag_54\n      swap1\n        /* \"openzeppelin/ERC20.sol\":4010:4060  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"openzeppelin/ERC20.sol\":3978:3986  _approve */\n      tag_39\n        /* \"openzeppelin/ERC20.sol\":3978:4061  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_50:\n        /* \"openzeppelin/ERC20.sol\":4078:4082  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4071:4082  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":3882:4089  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n    tag_25:\n        /* \"openzeppelin/ERC20.sol\":1843:1850  uint256 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":1869:1878  _balances */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":1869:1887  _balances[account] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":1879:1886  account */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":1869:1887  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":1862:1887  return _balances[account] */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":1786:1894  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_28:\n        /* \"openzeppelin/ERC20.sol\":4661:4665  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4677:4806  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"openzeppelin/ERC20.sol\":4686:4698  _msgSender() */\n      tag_58\n        /* \"openzeppelin/ERC20.sol\":4686:4696  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":4686:4698  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"openzeppelin/ERC20.sol\":4700:4707  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":4709:4805  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_59\n        /* \"openzeppelin/ERC20.sol\":4748:4763  subtractedValue */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":4709:4805  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":4709:4720  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4709:4734  _allowances[_msgSender()] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4721:4733  _msgSender() */\n      tag_60\n        /* \"openzeppelin/ERC20.sol\":4721:4731  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":4721:4733  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"openzeppelin/ERC20.sol\":4709:4734  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":4709:4743  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":4735:4742  spender */\n      dup11\n        /* \"openzeppelin/ERC20.sol\":4709:4743  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":4709:4747  _allowances[_msgSender()][spender].sub */\n      tag_48\n      swap1\n        /* \"openzeppelin/ERC20.sol\":4709:4805  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"openzeppelin/ERC20.sol\":4677:4685  _approve */\n      tag_39\n        /* \"openzeppelin/ERC20.sol\":4677:4806  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_57:\n        /* \"openzeppelin/ERC20.sol\":4823:4827  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":4816:4827  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":4576:4834  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_31:\n        /* \"openzeppelin/ERC20.sol\":2166:2170  bool */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2182:2224  _transfer(_msgSender(), recipient, amount) */\n      tag_62\n        /* \"openzeppelin/ERC20.sol\":2192:2204  _msgSender() */\n      tag_63\n        /* \"openzeppelin/ERC20.sol\":2192:2202  _msgSender */\n      tag_38\n        /* \"openzeppelin/ERC20.sol\":2192:2204  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"openzeppelin/ERC20.sol\":2206:2215  recipient */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2217:2223  amount */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2182:2191  _transfer */\n      tag_43\n        /* \"openzeppelin/ERC20.sol\":2182:2224  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_62:\n        /* \"openzeppelin/ERC20.sol\":2241:2245  true */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":2234:2245  return true */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":2097:2252  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_34:\n        /* \"openzeppelin/ERC20.sol\":2382:2389  uint256 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2408:2419  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":2408:2426  _allowances[owner] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2420:2425  owner */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":2408:2426  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":2408:2435  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":2427:2434  spender */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":2408:2435  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":2401:2435  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"openzeppelin/ERC20.sol\":2310:2442  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/GSN/Context.sol\":870:966  function _msgSender() internal view returns (address payable) {... */\n    tag_38:\n        /* \"openzeppelin/GSN/Context.sol\":915:930  address payable */\n      0x00\n        /* \"openzeppelin/GSN/Context.sol\":949:959  msg.sender */\n      caller\n        /* \"openzeppelin/GSN/Context.sol\":942:959  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin/GSN/Context.sol\":870:966  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":7430:7762  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_39:\n        /* \"openzeppelin/ERC20.sol\":7540:7541  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7523:7542  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":7523:7528  owner */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":7523:7542  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":7515:7583  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"openzeppelin/ERC20.sol\":7620:7621  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7601:7622  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":7601:7608  spender */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":7601:7622  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":7593:7661  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"openzeppelin/ERC20.sol\":7702:7708  amount */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":7672:7683  _allowances */\n      0x01\n        /* \"openzeppelin/ERC20.sol\":7672:7690  _allowances[owner] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7684:7689  owner */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":7672:7690  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":7672:7699  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":7691:7698  spender */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":7672:7699  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":7672:7708  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":7739:7746  spender */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":7723:7755  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":7732:7737  owner */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":7723:7755  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"openzeppelin/ERC20.sol\":7748:7754  amount */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":7723:7755  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin/ERC20.sol\":7430:7762  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/ERC20.sol\":5308:5772  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_43:\n        /* \"openzeppelin/ERC20.sol\":5423:5424  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5405:5425  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":5405:5411  sender */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":5405:5425  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":5397:5467  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"openzeppelin/ERC20.sol\":5506:5507  0 */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5485:5508  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":5485:5494  recipient */\n      dup3\n        /* \"openzeppelin/ERC20.sol\":5485:5508  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin/ERC20.sol\":5477:5548  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"openzeppelin/ERC20.sol\":5579:5650  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_72\n        /* \"openzeppelin/ERC20.sol\":5601:5607  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":5579:5650  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"openzeppelin/ERC20.sol\":5579:5588  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5579:5596  _balances[sender] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5589:5595  sender */\n      dup8\n        /* \"openzeppelin/ERC20.sol\":5579:5596  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":5579:5600  _balances[sender].sub */\n      tag_48\n      swap1\n        /* \"openzeppelin/ERC20.sol\":5579:5650  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"openzeppelin/ERC20.sol\":5559:5568  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5559:5576  _balances[sender] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5569:5575  sender */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":5559:5576  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":5559:5650  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":5683:5715  _balances[recipient].add(amount) */\n      tag_73\n        /* \"openzeppelin/ERC20.sol\":5708:5714  amount */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":5683:5692  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5683:5703  _balances[recipient] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5693:5702  recipient */\n      dup6\n        /* \"openzeppelin/ERC20.sol\":5683:5703  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin/ERC20.sol\":5683:5707  _balances[recipient].add */\n      tag_54\n      swap1\n        /* \"openzeppelin/ERC20.sol\":5683:5715  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"openzeppelin/ERC20.sol\":5660:5669  _balances */\n      0x00\n        /* \"openzeppelin/ERC20.sol\":5660:5680  _balances[recipient] */\n      dup1\n        /* \"openzeppelin/ERC20.sol\":5670:5679  recipient */\n      dup5\n        /* \"openzeppelin/ERC20.sol\":5660:5680  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin/ERC20.sol\":5660:5715  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin/ERC20.sol\":5747:5756  recipient */\n      dup2\n        /* \"openzeppelin/ERC20.sol\":5730:5765  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin/ERC20.sol\":5739:5745  sender */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":5730:5765  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin/ERC20.sol\":5758:5764  amount */\n      dup4\n        /* \"openzeppelin/ERC20.sol\":5730:5765  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin/ERC20.sol\":5308:5772  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/math/SafeMath.sol\":1816:2003  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_48:\n        /* \"openzeppelin/math/SafeMath.sol\":1902:1909  uint256 */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":1934:1935  a */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1929:1930  b */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1929:1935  b <= a */\n      gt\n      iszero\n        /* \"openzeppelin/math/SafeMath.sol\":1937:1949  errorMessage */\n      dup3\n        /* \"openzeppelin/math/SafeMath.sol\":1921:1950  require(b <= a, errorMessage) */\n      swap1\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_76:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_76)\n    tag_78:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1921:1950  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_79:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1960:1969  uint256 c */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":1976:1977  b */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1972:1973  a */\n      dup6\n        /* \"openzeppelin/math/SafeMath.sol\":1972:1977  a - b */\n      sub\n        /* \"openzeppelin/math/SafeMath.sol\":1960:1977  uint256 c = a - b */\n      swap1\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1995:1996  c */\n      dup1\n        /* \"openzeppelin/math/SafeMath.sol\":1988:1996  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1816:2003  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin/math/SafeMath.sol\":918:1094  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"openzeppelin/math/SafeMath.sol\":976:983  uint256 */\n      0x00\n        /* \"openzeppelin/math/SafeMath.sol\":995:1004  uint256 c */\n      dup1\n        /* \"openzeppelin/math/SafeMath.sol\":1011:1012  b */\n      dup3\n        /* \"openzeppelin/math/SafeMath.sol\":1007:1008  a */\n      dup5\n        /* \"openzeppelin/math/SafeMath.sol\":1007:1012  a + b */\n      add\n        /* \"openzeppelin/math/SafeMath.sol\":995:1012  uint256 c = a + b */\n      swap1\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":1035:1036  a */\n      dup4\n        /* \"openzeppelin/math/SafeMath.sol\":1030:1031  c */\n      dup2\n        /* \"openzeppelin/math/SafeMath.sol\":1030:1036  c >= a */\n      lt\n      iszero\n        /* \"openzeppelin/math/SafeMath.sol\":1022:1068  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"openzeppelin/math/SafeMath.sol\":1086:1087  c */\n      dup1\n        /* \"openzeppelin/math/SafeMath.sol\":1079:1087  return c */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin/math/SafeMath.sol\":918:1094  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa265627a7a7231582054955344deee7b9815aa22e68609df2b4dda3b6c9d99109e74a3f6c35a947d7564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052610e3a806100136000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b7565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c1565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049a565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054d565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610662565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b6040518082815260200191505060405180910390f35b60006103ad6103a6610707565b848461070f565b6001905092915050565b6000600254905090565b60006103ce848484610906565b61048f846103da610707565b61048a85604051806060016040528060288152602001610d7060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610440610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b600190509392505050565b60006105436104a7610707565b8461053e85600160006104b8610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b61070f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106586105a2610707565b8461065385604051806060016040528060258152602001610de160259139600160006105cc610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b6001905092915050565b600061067661066f610707565b8484610906565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610795576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610dbd6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d286022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610d986025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d056023913960400191505060405180910390fd5b610a7d81604051806060016040528060268152602001610d4a602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b10816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610c69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2e578082015181840152602081019050610c13565b50505050905090810190601f168015610c5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610cfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582054955344deee7b9815aa22e68609df2b4dda3b6c9d99109e74a3f6c35a947d7564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xE3A DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH2 0x3A6 PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x48F DUP5 PUSH2 0x3DA PUSH2 0x707 JUMP JUMPDEST PUSH2 0x48A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD70 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x440 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 PUSH2 0x4A7 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x53E DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4B8 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x658 PUSH2 0x5A2 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x653 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5CC PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 PUSH2 0x66F PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDBD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD28 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD98 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD05 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB10 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC13 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC5B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x7231582054955344DEEE7B9815AA22E68609DF2B4DDA3B6C9D9910 SWAP15 PUSH21 0xA3F6C35A947D7564736F6C63430005110032000000 ",
							"sourceMap": "1348:6823:3:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b7565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103c1565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061049a565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061054d565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610595565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610662565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610680565b6040518082815260200191505060405180910390f35b60006103ad6103a6610707565b848461070f565b6001905092915050565b6000600254905090565b60006103ce848484610906565b61048f846103da610707565b61048a85604051806060016040528060288152602001610d7060289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610440610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b600190509392505050565b60006105436104a7610707565b8461053e85600160006104b8610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b61070f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006106586105a2610707565b8461065385604051806060016040528060258152602001610de160259139600160006105cc610707565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b61070f565b6001905092915050565b600061067661066f610707565b8484610906565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610795576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610dbd6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561081b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d286022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610d986025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d056023913960400191505060405180910390fd5b610a7d81604051806060016040528060268152602001610d4a602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bbc9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b10816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c7c90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610c69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610c2e578082015181840152602081019050610c13565b50505050905090810190601f168015610c5b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080828401905083811015610cfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a7231582054955344deee7b9815aa22e68609df2b4dda3b6c9d99109e74a3f6c35a947d7564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3AD PUSH2 0x3A6 PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CE DUP5 DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x48F DUP5 PUSH2 0x3DA PUSH2 0x707 JUMP JUMPDEST PUSH2 0x48A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD70 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x440 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x543 PUSH2 0x4A7 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x53E DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4B8 PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x658 PUSH2 0x5A2 PUSH2 0x707 JUMP JUMPDEST DUP5 PUSH2 0x653 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDE1 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x5CC PUSH2 0x707 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x676 PUSH2 0x66F PUSH2 0x707 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x906 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDBD PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD28 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD98 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD05 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7D DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBBC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB10 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xC7C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xC69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC13 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC5B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA265627A PUSH27 0x7231582054955344DEEE7B9815AA22E68609DF2B4DDA3B6C9D9910 SWAP15 PUSH21 0xA3F6C35A947D7564736F6C63430005110032000000 ",
							"sourceMap": "1348:6823:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:6823:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:149;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2580:149:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1639:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3187:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3187:300:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3882:207;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3882:207:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1786:108;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1786:108:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4576:258;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4576:258:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2097:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2097:155:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2310:132;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2310:132:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2580:149;2646:4;2662:39;2671:12;:10;:12::i;:::-;2685:7;2694:6;2662:8;:39::i;:::-;2718:4;2711:11;;2580:149;;;;:::o;1639:89::-;1683:7;1709:12;;1702:19;;1639:89;:::o;3187:300::-;3276:4;3292:36;3302:6;3310:9;3321:6;3292:9;:36::i;:::-;3338:121;3347:6;3355:12;:10;:12::i;:::-;3369:89;3407:6;3369:89;;;;;;;;;;;;;;;;;:11;:19;3381:6;3369:19;;;;;;;;;;;;;;;:33;3389:12;:10;:12::i;:::-;3369:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3338:8;:121::i;:::-;3476:4;3469:11;;3187:300;;;;;:::o;3882:207::-;3962:4;3978:83;3987:12;:10;:12::i;:::-;4001:7;4010:50;4049:10;4010:11;:25;4022:12;:10;:12::i;:::-;4010:25;;;;;;;;;;;;;;;:34;4036:7;4010:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3978:8;:83::i;:::-;4078:4;4071:11;;3882:207;;;;:::o;1786:108::-;1843:7;1869:9;:18;1879:7;1869:18;;;;;;;;;;;;;;;;1862:25;;1786:108;;;:::o;4576:258::-;4661:4;4677:129;4686:12;:10;:12::i;:::-;4700:7;4709:96;4748:15;4709:96;;;;;;;;;;;;;;;;;:11;:25;4721:12;:10;:12::i;:::-;4709:25;;;;;;;;;;;;;;;:34;4735:7;4709:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4677:8;:129::i;:::-;4823:4;4816:11;;4576:258;;;;:::o;2097:155::-;2166:4;2182:42;2192:12;:10;:12::i;:::-;2206:9;2217:6;2182:9;:42::i;:::-;2241:4;2234:11;;2097:155;;;;:::o;2310:132::-;2382:7;2408:11;:18;2420:5;2408:18;;;;;;;;;;;;;;;:27;2427:7;2408:27;;;;;;;;;;;;;;;;2401:34;;2310:132;;;;:::o;870:96:5:-;915:15;949:10;942:17;;870:96;:::o;7430:332:3:-;7540:1;7523:19;;:5;:19;;;;7515:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7620:1;7601:21;;:7;:21;;;;7593:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7702:6;7672:11;:18;7684:5;7672:18;;;;;;;;;;;;;;;:27;7691:7;7672:27;;;;;;;;;;;;;;;:36;;;;7739:7;7723:32;;7732:5;7723:32;;;7748:6;7723:32;;;;;;;;;;;;;;;;;;7430:332;;;:::o;5308:464::-;5423:1;5405:20;;:6;:20;;;;5397:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5506:1;5485:23;;:9;:23;;;;5477:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5579;5601:6;5579:71;;;;;;;;;;;;;;;;;:9;:17;5589:6;5579:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5559:9;:17;5569:6;5559:17;;;;;;;;;;;;;;;:91;;;;5683:32;5708:6;5683:9;:20;5693:9;5683:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5660:9;:20;5670:9;5660:20;;;;;;;;;;;;;;;:55;;;;5747:9;5730:35;;5739:6;5730:35;;;5758:6;5730:35;;;;;;;;;;;;;;;;;;5308:464;;;:::o;1816:187:7:-;1902:7;1934:1;1929;:6;;1937:12;1921:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1921:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:9;1976:1;1972;:5;1960:17;;1995:1;1988:8;;;1816:187;;;;;:::o;918:176::-;976:7;995:9;1011:1;1007;:5;995:17;;1035:1;1030;:6;;1022:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:1;1079:8;;;918:176;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "728400",
								"executionCost": "736",
								"totalCost": "729136"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1196",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1348,
									"end": 8171,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "MSTORE"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "DUP1"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "CODECOPY"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1348,
									"end": 8171,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582054955344deee7b9815aa22e68609df2b4dda3b6c9d99109e74a3f6c35a947d7564736f6c63430005110032",
									".code": [
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "POP"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "LT"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "SHR"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "GT"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMP"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPDEST"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "EQ"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "JUMPDEST"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 8171,
											"name": "REVERT"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "AND"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMPDEST"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "MLOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "MSTORE"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "MLOAD"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "DUP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SUB"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP1"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "RETURN"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "MLOAD"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP3"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP2"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "MSTORE"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "ADD"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP2"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "POP"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "POP"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "MLOAD"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "DUP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP2"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SUB"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "RETURN"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "AND"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "AND"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "MLOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ISZERO"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "MSTORE"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "ADD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "MLOAD"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "DUP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP2"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SUB"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP1"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "RETURN"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "AND"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "MLOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ISZERO"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "MSTORE"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "ADD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "MLOAD"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "DUP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SUB"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP1"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "RETURN"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP3"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "MLOAD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP3"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "MSTORE"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "MLOAD"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SUB"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "RETURN"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMPDEST"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "AND"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMPDEST"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "MLOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ISZERO"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "MSTORE"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "ADD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "MLOAD"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "DUP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SUB"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "RETURN"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "AND"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "MLOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ISZERO"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "MSTORE"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "ADD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "MLOAD"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "DUP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SUB"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "RETURN"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMPDEST"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "AND"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "AND"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMPDEST"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "MLOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "MSTORE"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "ADD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "MLOAD"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "DUP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SUB"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "RETURN"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMPDEST"
										},
										{
											"begin": 2646,
											"end": 2650,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2671,
											"end": 2681,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "JUMPDEST"
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP5"
										},
										{
											"begin": 2694,
											"end": 2700,
											"name": "DUP5"
										},
										{
											"begin": 2662,
											"end": 2670,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2662,
											"end": 2701,
											"name": "JUMPDEST"
										},
										{
											"begin": 2718,
											"end": 2722,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2711,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP3"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "SWAP2"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2729,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMPDEST"
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1709,
											"end": 1721,
											"name": "SLOAD"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "SWAP1"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "POP"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "SWAP1"
										},
										{
											"begin": 1639,
											"end": 1728,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMPDEST"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3302,
											"end": 3308,
											"name": "DUP5"
										},
										{
											"begin": 3310,
											"end": 3319,
											"name": "DUP5"
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "DUP5"
										},
										{
											"begin": 3292,
											"end": 3301,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3292,
											"end": 3328,
											"name": "JUMPDEST"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "DUP5"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 3355,
											"end": 3365,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 3355,
											"end": 3367,
											"name": "JUMPDEST"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "DUP6"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "MLOAD"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "DUP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "DUP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH data",
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "CODECOPY"
										},
										{
											"begin": 3369,
											"end": 3380,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP12"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3388,
											"name": "KECCAK256"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3389,
											"end": 3399,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3389,
											"end": 3401,
											"name": "JUMPDEST"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "DUP2"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "MSTORE"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "ADD"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "KECCAK256"
										},
										{
											"begin": 3369,
											"end": 3402,
											"name": "SLOAD"
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3369,
											"end": 3406,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP3"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP2"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "SWAP1"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "AND"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3369,
											"end": 3458,
											"name": "JUMPDEST"
										},
										{
											"begin": 3338,
											"end": 3346,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 3338,
											"end": 3459,
											"name": "JUMPDEST"
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "SWAP1"
										},
										{
											"begin": 3469,
											"end": 3480,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP4"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "SWAP3"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "POP"
										},
										{
											"begin": 3187,
											"end": 3487,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMPDEST"
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 3987,
											"end": 3997,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 3987,
											"end": 3999,
											"name": "JUMPDEST"
										},
										{
											"begin": 4001,
											"end": 4008,
											"name": "DUP5"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4049,
											"end": 4059,
											"name": "DUP6"
										},
										{
											"begin": 4010,
											"end": 4021,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4022,
											"end": 4032,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "JUMPDEST"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4035,
											"name": "KECCAK256"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4043,
											"name": "DUP10"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "DUP2"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "MSTORE"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "ADD"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "KECCAK256"
										},
										{
											"begin": 4010,
											"end": 4044,
											"name": "SLOAD"
										},
										{
											"begin": 4010,
											"end": 4048,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4010,
											"end": 4048,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "SWAP2"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "SWAP1"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "AND"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4010,
											"end": 4060,
											"name": "JUMPDEST"
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 3978,
											"end": 4061,
											"name": "JUMPDEST"
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4071,
											"end": 4082,
											"name": "SWAP1"
										},
										{
											"begin": 4071,
											"end": 4082,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP3"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "SWAP2"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "POP"
										},
										{
											"begin": 3882,
											"end": 4089,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMPDEST"
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "DUP1"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "DUP4"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "AND"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "AND"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP2"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "MSTORE"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "SWAP1"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "DUP2"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "MSTORE"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "ADD"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "KECCAK256"
										},
										{
											"begin": 1869,
											"end": 1887,
											"name": "SLOAD"
										},
										{
											"begin": 1862,
											"end": 1887,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1887,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1786,
											"end": 1894,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMPDEST"
										},
										{
											"begin": 4661,
											"end": 4665,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 4686,
											"end": 4696,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 4686,
											"end": 4698,
											"name": "JUMPDEST"
										},
										{
											"begin": 4700,
											"end": 4707,
											"name": "DUP5"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4748,
											"end": 4763,
											"name": "DUP6"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "MLOAD"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "DUP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "DUP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH data",
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP2"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "CODECOPY"
										},
										{
											"begin": 4709,
											"end": 4720,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4721,
											"end": 4731,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4721,
											"end": 4733,
											"name": "JUMPDEST"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4734,
											"name": "KECCAK256"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4742,
											"name": "DUP11"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "DUP2"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "MSTORE"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "ADD"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "KECCAK256"
										},
										{
											"begin": 4709,
											"end": 4743,
											"name": "SLOAD"
										},
										{
											"begin": 4709,
											"end": 4747,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4709,
											"end": 4747,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP3"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP2"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "SWAP1"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "AND"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 4709,
											"end": 4805,
											"name": "JUMPDEST"
										},
										{
											"begin": 4677,
											"end": 4685,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 4677,
											"end": 4806,
											"name": "JUMPDEST"
										},
										{
											"begin": 4823,
											"end": 4827,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "SWAP1"
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP3"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "SWAP2"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "POP"
										},
										{
											"begin": 4576,
											"end": 4834,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMPDEST"
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2192,
											"end": 2202,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "JUMPDEST"
										},
										{
											"begin": 2206,
											"end": 2215,
											"name": "DUP5"
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP5"
										},
										{
											"begin": 2182,
											"end": 2191,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2182,
											"end": 2224,
											"name": "JUMPDEST"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2234,
											"end": 2245,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP3"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "SWAP2"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMPDEST"
										},
										{
											"begin": 2382,
											"end": 2389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2419,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2425,
											"name": "DUP5"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "KECCAK256"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2434,
											"name": "DUP4"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "AND"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "SWAP1"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "DUP2"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "MSTORE"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "ADD"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "KECCAK256"
										},
										{
											"begin": 2408,
											"end": 2435,
											"name": "SLOAD"
										},
										{
											"begin": 2401,
											"end": 2435,
											"name": "SWAP1"
										},
										{
											"begin": 2401,
											"end": 2435,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP3"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "SWAP2"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2442,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "JUMPDEST"
										},
										{
											"begin": 915,
											"end": 930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 949,
											"end": 959,
											"name": "CALLER"
										},
										{
											"begin": 942,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "SWAP1"
										},
										{
											"begin": 870,
											"end": 966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "JUMPDEST"
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7523,
											"end": 7528,
											"name": "DUP4"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "AND"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "EQ"
										},
										{
											"begin": 7523,
											"end": 7542,
											"name": "ISZERO"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "JUMPI"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MLOAD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MSTORE"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP3"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SUB"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP3"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MSTORE"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MSTORE"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "CODECOPY"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "ADD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "POP"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "POP"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "MLOAD"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "DUP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP2"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SUB"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "SWAP1"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "REVERT"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 7515,
											"end": 7583,
											"name": "JUMPDEST"
										},
										{
											"begin": 7620,
											"end": 7621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7601,
											"end": 7608,
											"name": "DUP3"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "AND"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "EQ"
										},
										{
											"begin": 7601,
											"end": 7622,
											"name": "ISZERO"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SUB"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "CODECOPY"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "POP"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP2"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SUB"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "SWAP1"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "REVERT"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST"
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "DUP1"
										},
										{
											"begin": 7672,
											"end": 7683,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7689,
											"name": "DUP6"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "SWAP1"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "KECCAK256"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7691,
											"end": 7698,
											"name": "DUP5"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "AND"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "SWAP1"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "MSTORE"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "ADD"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "KECCAK256"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "DUP2"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "SWAP1"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "SSTORE"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "POP"
										},
										{
											"begin": 7739,
											"end": 7746,
											"name": "DUP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "AND"
										},
										{
											"begin": 7732,
											"end": 7737,
											"name": "DUP4"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "AND"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7748,
											"end": 7754,
											"name": "DUP4"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "MLOAD"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP1"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP3"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "MSTORE"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "ADD"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "POP"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "POP"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "MLOAD"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "DUP1"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP2"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SUB"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SWAP1"
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "LOG3"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "POP"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "POP"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "POP"
										},
										{
											"begin": 7430,
											"end": 7762,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "JUMPDEST"
										},
										{
											"begin": 5423,
											"end": 5424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5411,
											"name": "DUP4"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "AND"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "EQ"
										},
										{
											"begin": 5405,
											"end": 5425,
											"name": "ISZERO"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "JUMPI"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP3"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MSTORE"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH data",
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "CODECOPY"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "ADD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "POP"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "MLOAD"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "DUP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP2"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SUB"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "SWAP1"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "REVERT"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5397,
											"end": 5467,
											"name": "JUMPDEST"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "AND"
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "DUP3"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "AND"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "EQ"
										},
										{
											"begin": 5485,
											"end": 5508,
											"name": "ISZERO"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "JUMPI"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP3"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SUB"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP3"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH data",
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "CODECOPY"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SUB"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "REVERT"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5477,
											"end": 5548,
											"name": "JUMPDEST"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "MLOAD"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DUP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DUP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH data",
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "CODECOPY"
										},
										{
											"begin": 5579,
											"end": 5588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "DUP1"
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP8"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "AND"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "AND"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "SWAP1"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "DUP2"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "MSTORE"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "ADD"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "KECCAK256"
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "SLOAD"
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5579,
											"end": 5600,
											"name": "SWAP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP3"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP2"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP1"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "AND"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP1"
										},
										{
											"begin": 5569,
											"end": 5575,
											"name": "DUP6"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5576,
											"name": "KECCAK256"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "SSTORE"
										},
										{
											"begin": 5559,
											"end": 5650,
											"name": "POP"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5708,
											"end": 5714,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "DUP1"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP6"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "ADD"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "DUP2"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "MSTORE"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "ADD"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "KECCAK256"
										},
										{
											"begin": 5683,
											"end": 5703,
											"name": "SLOAD"
										},
										{
											"begin": 5683,
											"end": 5707,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5683,
											"end": 5707,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "SWAP2"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "SWAP1"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "AND"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "JUMPDEST"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "DUP1"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP5"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "AND"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "AND"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "MSTORE"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "ADD"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5680,
											"name": "KECCAK256"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "DUP2"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "SWAP1"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "SSTORE"
										},
										{
											"begin": 5660,
											"end": 5715,
											"name": "POP"
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "DUP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "AND"
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP4"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "AND"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5758,
											"end": 5764,
											"name": "DUP4"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "MLOAD"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP1"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP3"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "MSTORE"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "ADD"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SWAP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "POP"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "POP"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "MLOAD"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "DUP1"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SWAP2"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SUB"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "SWAP1"
										},
										{
											"begin": 5730,
											"end": 5765,
											"name": "LOG3"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "POP"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "POP"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "POP"
										},
										{
											"begin": 5308,
											"end": 5772,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1902,
											"end": 1909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1935,
											"name": "DUP4"
										},
										{
											"begin": 1929,
											"end": 1930,
											"name": "DUP4"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "GT"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "ISZERO"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPI"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "AND"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ISZERO"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPI"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP4"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "EXP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "NOT"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "AND"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MSTORE"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP3"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "MLOAD"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "DUP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SUB"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "SWAP1"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "REVERT"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "JUMPDEST"
										},
										{
											"begin": 1921,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "DUP4"
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "DUP6"
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "SUB"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "SWAP1"
										},
										{
											"begin": 1960,
											"end": 1977,
											"name": "POP"
										},
										{
											"begin": 1995,
											"end": 1996,
											"name": "DUP1"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "SWAP2"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 1996,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "SWAP4"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "SWAP3"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 2003,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "JUMPDEST"
										},
										{
											"begin": 976,
											"end": 983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1004,
											"name": "DUP1"
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "DUP3"
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "DUP5"
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "ADD"
										},
										{
											"begin": 995,
											"end": 1012,
											"name": "SWAP1"
										},
										{
											"begin": 995,
											"end": 1012,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP4"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "DUP2"
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "LT"
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "ISZERO"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "JUMPI"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP3"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MSTORE"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "ADD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "POP"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "MLOAD"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "DUP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SWAP2"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SUB"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "SWAP1"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "REVERT"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1022,
											"end": 1068,
											"name": "JUMPDEST"
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP1"
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "SWAP2"
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP"
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "SWAP3"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "SWAP2"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 918,
											"end": 1094,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}. * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/ERC20.sol\":{\"keccak256\":\"0xdf6a0b14735e1306a712f53b25b2b2c5cf1ade022e3bd16b19031e60d9a05db2\",\"urls\":[\"bzz-raw://447e6129ed071364c2149c4819fe39ab4262d49b8284bf33700edc6e3d65f751\",\"dweb:/ipfs/QmVF1aCzrEk6X81p36sMvjJp6mDuaMpAvGRwb72HnfPRTd\"]},\"openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x80987e1294f2d1b2deef6b0c73e7ef3416831bd938b6f9d824c21583cd50517f\",\"urls\":[\"bzz-raw://19297a2b3e7d4aeb33b8e0180e96e6a427ac1cef844828087668adedce7ea2f3\",\"dweb:/ipfs/QmZ3j76xF8ZHMwLCkPnF2btugcDRymDH3xXQym26aBvSKn\"]},\"openzeppelin/IERC20.sol\":{\"keccak256\":\"0x694b989b371044e7a6730ce6d4b3da45679b7d5a5ff57cb6d6d84d567add5312\",\"urls\":[\"bzz-raw://529be491ce5d5ff6de81273a85d17fdd0a7e1f50121b7a8b886f3612ad39caa1\",\"dweb:/ipfs/Qmd2KFSZtkSeyUES6z2c2UdZhMQ6AgKLz6DXkqX5ApyfFE\"]},\"openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x4424fbd3867daab73c27b540b229440a2674cb06ef6af869a68fb4df779c6c88\",\"urls\":[\"bzz-raw://145f661fede2b29cfc68e89c98ce835bc187a80b5ba1c20dc4b10612036c8ef9\",\"dweb:/ipfs/QmaZcvyrSQsFpmG83qHZZeHVZKdGxRz2p2PKfw447cxTZh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 226,
								"contract": "openzeppelin/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 232,
								"contract": "openzeppelin/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 234,
								"contract": "openzeppelin/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/ERC20Detailed.sol\":{\"keccak256\":\"0xcd32454b8ec5f73a3258f95654ae624106e983156d9df0316213f3abc6bb033a\",\"urls\":[\"bzz-raw://3385af1dc163ef05b9ca78d898d26c3b65f76547b413eef8b00d5264c8b7b7a4\",\"dweb:/ipfs/QmTkyhiSJEXgiXHd8EihuQEri613mCXeSnMBBYMgVJDFRV\"]},\"openzeppelin/IERC20.sol\":{\"keccak256\":\"0x694b989b371044e7a6730ce6d4b3da45679b7d5a5ff57cb6d6d84d567add5312\",\"urls\":[\"bzz-raw://529be491ce5d5ff6de81273a85d17fdd0a7e1f50121b7a8b886f3612ad39caa1\",\"dweb:/ipfs/Qmd2KFSZtkSeyUES6z2c2UdZhMQ6AgKLz6DXkqX5ApyfFE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 622,
								"contract": "openzeppelin/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 624,
								"contract": "openzeppelin/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 626,
								"contract": "openzeppelin/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x80987e1294f2d1b2deef6b0c73e7ef3416831bd938b6f9d824c21583cd50517f\",\"urls\":[\"bzz-raw://19297a2b3e7d4aeb33b8e0180e96e6a427ac1cef844828087668adedce7ea2f3\",\"dweb:/ipfs/QmZ3j76xF8ZHMwLCkPnF2btugcDRymDH3xXQym26aBvSKn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/IERC20.sol\":{\"keccak256\":\"0x694b989b371044e7a6730ce6d4b3da45679b7d5a5ff57cb6d6d84d567add5312\",\"urls\":[\"bzz-raw://529be491ce5d5ff6de81273a85d17fdd0a7e1f50121b7a8b886f3612ad39caa1\",\"dweb:/ipfs/Qmd2KFSZtkSeyUES6z2c2UdZhMQ6AgKLz6DXkqX5ApyfFE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"openzeppelin/math/SafeMath.sol\":673:5381  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin/math/SafeMath.sol\":673:5381  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158200df2556a2c90ee78b2377d028f93a5229fd7489e40f6551e518e1f20dc3caf4964736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200df2556a2c90ee78b2377d028f93a5229fd7489e40f6551e518e1f20dc3caf4964736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD CALLCODE SSTORE PUSH11 0x2C90EE78B2377D028F93A5 0x22 SWAP16 0xD7 0x48 SWAP15 BLOCKHASH 0xF6 SSTORE 0x1E MLOAD DUP15 0x1F KECCAK256 0xDC EXTCODECOPY 0xAF 0x49 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "673:4708:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200df2556a2c90ee78b2377d028f93a5229fd7489e40f6551e518e1f20dc3caf4964736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD CALLCODE SSTORE PUSH11 0x2C90EE78B2377D028F93A5 0x22 SWAP16 0xD7 0x48 SWAP15 BLOCKHASH 0xF6 SSTORE 0x1E MLOAD DUP15 0x1F KECCAK256 0xDC EXTCODECOPY 0xAF 0x49 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "673:4708:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 673,
									"end": 5381,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 673,
									"end": 5381,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200df2556a2c90ee78b2377d028f93a5229fd7489e40f6551e518e1f20dc3caf4964736f6c63430005110032",
									".code": [
										{
											"begin": 673,
											"end": 5381,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "ADDRESS"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "EQ"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "MSTORE"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "DUP1"
										},
										{
											"begin": 673,
											"end": 5381,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x4424fbd3867daab73c27b540b229440a2674cb06ef6af869a68fb4df779c6c88\",\"urls\":[\"bzz-raw://145f661fede2b29cfc68e89c98ce835bc187a80b5ba1c20dc4b10612036c8ef9\",\"dweb:/ipfs/QmaZcvyrSQsFpmG83qHZZeHVZKdGxRz2p2PKfw447cxTZh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/roles/MinterRole.sol": {
				"MinterRole": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterRemoved",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addMinter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceMinter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addMinter(address)": "983b2d56",
							"isMinter(address)": "aa271e1a",
							"renounceMinter()": "98650275"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/roles/MinterRole.sol\":\"MinterRole\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0x80987e1294f2d1b2deef6b0c73e7ef3416831bd938b6f9d824c21583cd50517f\",\"urls\":[\"bzz-raw://19297a2b3e7d4aeb33b8e0180e96e6a427ac1cef844828087668adedce7ea2f3\",\"dweb:/ipfs/QmZ3j76xF8ZHMwLCkPnF2btugcDRymDH3xXQym26aBvSKn\"]},\"openzeppelin/roles/MinterRole.sol\":{\"keccak256\":\"0xc15538d901d9f5a10b8d67aa8ef17aa799dc29bff292cb4fa7b0a3f36293dfff\",\"urls\":[\"bzz-raw://43a99428c9e5367f67c002a9c09d208aa12fe50a0c15ddbe80d5cbbe56945966\",\"dweb:/ipfs/QmVMDuuxPyEVEJTW9nVVu8L3rT7CdM8B8Nb4bvRFes7huR\"]},\"openzeppelin/roles/Roles.sol\":{\"keccak256\":\"0xd465b78997ef5912e0558bd44e254b1c27fd0d8067adf07e9888dd1863d1a859\",\"urls\":[\"bzz-raw://dcbbca346990a75ef42d9c85127999911bca8e4b2c68a7106cfe1cd470df0647\",\"dweb:/ipfs/QmVCigQe8sXKQA7Q8qDye49XJKapKJmBu8fZTfTrLLyunt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 975,
								"contract": "openzeppelin/roles/MinterRole.sol:MinterRole",
								"label": "_minters",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)1070_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)1070_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 1069,
										"contract": "openzeppelin/roles/MinterRole.sol:MinterRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"openzeppelin/roles/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"methods": {},
						"title": "Roles"
					},
					"evm": {
						"assembly": "    /* \"openzeppelin/roles/Roles.sol\":191:1064  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin/roles/Roles.sol\":191:1064  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820eaf9978465469745261afe60bd1ecaa697ba260abafb791bcb26788f7885e3c064736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820eaf9978465469745261afe60bd1ecaa697ba260abafb791bcb26788f7885e3c064736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEA 0xF9 SWAP8 DUP5 PUSH6 0x469745261AFE PUSH1 0xBD 0x1E 0xCA 0xA6 SWAP8 0xBA 0x26 EXP 0xBA 0xFB PUSH26 0x1BCB26788F7885E3C064736F6C63430005110032000000000000 ",
							"sourceMap": "191:873:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820eaf9978465469745261afe60bd1ecaa697ba260abafb791bcb26788f7885e3c064736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xEA 0xF9 SWAP8 DUP5 PUSH6 0x469745261AFE PUSH1 0xBD 0x1E 0xCA 0xA6 SWAP8 0xBA 0x26 EXP 0xBA 0xFB PUSH26 0x1BCB26788F7885E3C064736F6C63430005110032000000000000 ",
							"sourceMap": "191:873:9:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 1064,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 1064,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820eaf9978465469745261afe60bd1ecaa697ba260abafb791bcb26788f7885e3c064736f6c63430005110032",
									".code": [
										{
											"begin": 191,
											"end": 1064,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "ADDRESS"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "EQ"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 1064,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"methods\":{},\"title\":\"Roles\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin/roles/Roles.sol\":\"Roles\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin/roles/Roles.sol\":{\"keccak256\":\"0xd465b78997ef5912e0558bd44e254b1c27fd0d8067adf07e9888dd1863d1a859\",\"urls\":[\"bzz-raw://dcbbca346990a75ef42d9c85127999911bca8e4b2c68a7106cfe1cd470df0647\",\"dweb:/ipfs/QmVCigQe8sXKQA7Q8qDye49XJKapKJmBu8fZTfTrLLyunt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"IExecutableProposal.sol": {
				"ast": {
					"absolutePath": "IExecutableProposal.sol",
					"exportedSymbols": {
						"IExecutableProposal": [
							11
						]
					},
					"id": 12,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IExecutableProposal",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "proposalId",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "86:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "86:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "numVotes",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"name": "numTokens",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "118:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "85:48:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:0"
									},
									"scope": 11,
									"src": "61:90:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 12,
							"src": "25:128:0"
						}
					],
					"src": "0:153:0"
				},
				"id": 0
			},
			"IQuadraticVoting.sol": {
				"ast": {
					"absolutePath": "IQuadraticVoting.sol",
					"exportedSymbols": {
						"IQuadraticVoting": [
							124
						]
					},
					"id": 125,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 13,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "UCMToken.sol",
							"file": "./UCMToken.sol",
							"id": 14,
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 211,
							"src": "25:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IExecutableProposal.sol",
							"file": "./IExecutableProposal.sol",
							"id": 15,
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 12,
							"src": "50:35:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 124,
							"linearizedBaseContracts": [
								124
							],
							"name": "IQuadraticVoting",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "OpenVote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "135:2:1"
									},
									"src": "121:17:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 21,
									"name": "CanWithdrawnFromProposal",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"name": "proposalId",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "174:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "174:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "173:17:1"
									},
									"src": "143:48:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 23,
									"name": "ClosedVote",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:2:1"
									},
									"src": "196:19:1"
								},
								{
									"canonicalName": "IQuadraticVoting.Proposal",
									"id": 46,
									"members": [
										{
											"constant": false,
											"id": 25,
											"name": "owner",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "247:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 24,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "247:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"name": "executableProposal",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "270:38:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IExecutableProposal_$11",
												"typeString": "contract IExecutableProposal"
											},
											"typeName": {
												"contractScope": null,
												"id": 26,
												"name": "IExecutableProposal",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 11,
												"src": "270:19:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IExecutableProposal_$11",
													"typeString": "contract IExecutableProposal"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"name": "proposal",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "318:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "318:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 31,
											"name": "title",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "344:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 30,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "344:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 33,
											"name": "description",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "366:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 32,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "366:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 35,
											"name": "minBudget",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "394:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 34,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "394:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"name": "currentVotes",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "436:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 36,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "436:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"name": "currentTokens",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "463:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 38,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "463:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 43,
											"name": "votes",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "491:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 42,
												"keyType": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "491:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "510:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"name": "state",
											"nodeType": "VariableDeclaration",
											"scope": 46,
											"src": "531:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 44,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "531:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 124,
									"src": "221:373:1",
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "openVoting",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:2:1"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:0:1"
									},
									"scope": 124,
									"src": "600:39:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addParticipant",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "667:2:1"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:0:1"
									},
									"scope": 124,
									"src": "644:43:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 65,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "title",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "713:21:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "713:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "description",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "736:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "736:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"name": "minBudget",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "765:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"name": "executableProposal",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "781:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:96:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "826:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "826:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "825:6:1"
									},
									"scope": 124,
									"src": "692:140:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "861:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "860:9:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:0:1"
									},
									"scope": 124,
									"src": "837:42:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 73,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:2:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:0:1"
									},
									"scope": 124,
									"src": "884:38:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sellTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "947:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "947:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "946:13:1"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:0:1"
									},
									"scope": 124,
									"src": "927:42:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getERC20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "991:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1016:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UCMToken_$210",
													"typeString": "contract UCMToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 80,
													"name": "UCMToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 210,
													"src": "1016:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_UCMToken_$210",
														"typeString": "contract UCMToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1015:10:1"
									},
									"scope": 124,
									"src": "974:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPendingProposals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1059:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1084:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 85,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1084:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 86,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1084:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:15:1"
									},
									"scope": 124,
									"src": "1031:68:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApprovedProposals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1158:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 91,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1158:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 92,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1158:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1157:15:1"
									},
									"scope": 124,
									"src": "1104:69:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSignalingProposals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 97,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1233:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 98,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1232:15:1"
									},
									"scope": 124,
									"src": "1178:70:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1268:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"name": "votes",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1277:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:21:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:1"
									},
									"scope": 124,
									"src": "1253:45:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawFromProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1333:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "1346:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1346:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1332:22:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:0:1"
									},
									"scope": 124,
									"src": "1303:61:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "closeVoting",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1389:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1408:0:1"
									},
									"scope": 124,
									"src": "1369:40:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeSignaling",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1440:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1440:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1439:9:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1457:0:1"
									},
									"scope": 124,
									"src": "1414:44:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 125,
							"src": "87:1373:1"
						}
					],
					"src": "0:1460:1"
				},
				"id": 1
			},
			"UCMToken.sol": {
				"ast": {
					"absolutePath": "UCMToken.sol",
					"exportedSymbols": {
						"UCMToken": [
							210
						]
					},
					"id": 211,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "openzeppelin/ERC20.sol",
							"file": "./openzeppelin/ERC20.sol",
							"id": 127,
							"nodeType": "ImportDirective",
							"scope": 211,
							"sourceUnit": 616,
							"src": "25:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/ERC20Detailed.sol",
							"file": "./openzeppelin/ERC20Detailed.sol",
							"id": 128,
							"nodeType": "ImportDirective",
							"scope": 211,
							"sourceUnit": 674,
							"src": "60:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/roles/MinterRole.sol",
							"file": "./openzeppelin/roles/MinterRole.sol",
							"id": 129,
							"nodeType": "ImportDirective",
							"scope": 211,
							"sourceUnit": 1064,
							"src": "103:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 130,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 615,
										"src": "171:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$615",
											"typeString": "contract ERC20"
										}
									},
									"id": 131,
									"nodeType": "InheritanceSpecifier",
									"src": "171:5:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 132,
										"name": "ERC20Detailed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 673,
										"src": "178:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Detailed_$673",
											"typeString": "contract ERC20Detailed"
										}
									},
									"id": 133,
									"nodeType": "InheritanceSpecifier",
									"src": "178:13:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 134,
										"name": "MinterRole",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1063,
										"src": "193:10:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MinterRole_$1063",
											"typeString": "contract MinterRole"
										}
									},
									"id": 135,
									"nodeType": "InheritanceSpecifier",
									"src": "193:10:2"
								}
							],
							"contractDependencies": [
								615,
								673,
								700,
								769,
								1063
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 210,
							"linearizedBaseContracts": [
								210,
								1063,
								673,
								615,
								769,
								700
							],
							"name": "UCMToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 137,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 210,
									"src": "211:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 136,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "211:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "291:35:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 145,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "301:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 146,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "309:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "309:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "301:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "301:18:2"
											}
										]
									},
									"documentation": null,
									"id": 151,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "55434d",
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "267:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_01b6eae5d014c966b5ef3a90781bddbdca0cee7dcc259d5b2b4ee262427d8335",
														"typeString": "literal_string \"UCM\""
													},
													"value": "UCM"
												},
												{
													"argumentTypes": null,
													"hexValue": "55434d",
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "274:5:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_01b6eae5d014c966b5ef3a90781bddbdca0cee7dcc259d5b2b4ee262427d8335",
														"typeString": "literal_string \"UCM\""
													},
													"value": "UCM"
												},
												{
													"argumentTypes": null,
													"hexValue": "30",
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "281:1:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"id": 143,
											"modifierName": {
												"argumentTypes": null,
												"id": 139,
												"name": "ERC20Detailed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 673,
												"src": "253:13:2",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$673_$",
													"typeString": "type(contract ERC20Detailed)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "253:30:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:2:2"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:2"
									},
									"scope": 210,
									"src": "239:87:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "396:39:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 161,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "412:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 162,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "421:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 160,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "406:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "406:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "406:22:2"
											}
										]
									},
									"documentation": null,
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 158,
											"modifierName": {
												"argumentTypes": null,
												"id": 157,
												"name": "onlyMinter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 996,
												"src": "385:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "385:10:2"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "346:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "363:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "363:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "345:30:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:2"
									},
									"scope": 210,
									"src": "332:103:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "505:39:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 176,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "521:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 177,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "530:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 175,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "515:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "515:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "515:22:2"
											}
										]
									},
									"documentation": null,
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 173,
											"modifierName": {
												"argumentTypes": null,
												"id": 172,
												"name": "onlyMinter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 996,
												"src": "494:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "494:10:2"
										}
									],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "472:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "454:30:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:0:2"
									},
									"scope": 210,
									"src": "441:103:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "626:53:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 191,
															"name": "stakeOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "646:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 192,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "658:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "665:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "636:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "636:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "636:36:2"
											}
										]
									},
									"documentation": null,
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 188,
											"modifierName": {
												"argumentTypes": null,
												"id": 187,
												"name": "onlyMinter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 996,
												"src": "615:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "615:10:2"
										}
									],
									"name": "stakeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "stakeOwner",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "573:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "593:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:33:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "626:0:2"
									},
									"scope": 210,
									"src": "550:129:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "707:72:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "725:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "725:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 202,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "739:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "725:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e617574686f72697a6564",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:14:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "717:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "717:44:2"
											},
											{
												"id": 207,
												"nodeType": "PlaceholderStatement",
												"src": "771:1:2"
											}
										]
									},
									"documentation": null,
									"id": 209,
									"name": "checkOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:2:2"
									},
									"src": "685:94:2",
									"visibility": "internal"
								}
							],
							"scope": 211,
							"src": "150:631:2"
						}
					],
					"src": "0:781:2"
				},
				"id": 2
			},
			"openzeppelin/ERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							615
						]
					},
					"id": 616,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 212,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:3"
						},
						{
							"absolutePath": "openzeppelin/GSN/Context.sol",
							"file": "./GSN/Context.sol",
							"id": 213,
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 701,
							"src": "113:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 214,
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 770,
							"src": "141:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/math/SafeMath.sol",
							"file": "./math/SafeMath.sol",
							"id": 215,
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 957,
							"src": "164:29:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 216,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 700,
										"src": "1366:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$700",
											"typeString": "contract Context"
										}
									},
									"id": 217,
									"nodeType": "InheritanceSpecifier",
									"src": "1366:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 218,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 769,
										"src": "1375:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$769",
											"typeString": "contract IERC20"
										}
									},
									"id": 219,
									"nodeType": "InheritanceSpecifier",
									"src": "1375:6:3"
								}
							],
							"contractDependencies": [
								700,
								769
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20Mintable}.\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 615,
							"linearizedBaseContracts": [
								615,
								769,
								700
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 222,
									"libraryName": {
										"contractScope": null,
										"id": 220,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 956,
										"src": "1394:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$956",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1388:27:3",
									"typeName": {
										"id": 221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1407:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 226,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1421:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 225,
										"keyType": {
											"id": 223,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1430:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1421:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1441:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1474:69:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 227,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1483:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1474:49:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 230,
											"keyType": {
												"id": 228,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1503:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1494:28:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 229,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1514:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 234,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1550:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 233,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1550:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "1692:36:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 239,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "1709:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 240,
												"nodeType": "Return",
												"src": "1702:19:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:2:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "1683:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:9:3"
									},
									"scope": 615,
									"src": "1639:89:3",
									"stateMutability": "view",
									"superFunction": 707,
									"visibility": "public"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1852:42:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 249,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1869:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"argumentTypes": null,
														"id": 250,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "1879:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1869:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 252,
												"nodeType": "Return",
												"src": "1862:25:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1804:17:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1843:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:9:3"
									},
									"scope": 615,
									"src": "1786:108:3",
									"stateMutability": "view",
									"superFunction": 714,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2172:80:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 264,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "2192:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2192:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 266,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "2206:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 267,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "2217:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 263,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2182:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2182:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2182:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2241:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 262,
												"id": 271,
												"nodeType": "Return",
												"src": "2234:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2115:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2134:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2134:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2114:35:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2166:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2166:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2165:6:3"
									},
									"scope": 615,
									"src": "2097:155:3",
									"stateMutability": "nonpayable",
									"superFunction": 723,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2391:51:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 282,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2408:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 284,
														"indexExpression": {
															"argumentTypes": null,
															"id": 283,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "2420:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2408:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 286,
													"indexExpression": {
														"argumentTypes": null,
														"id": 285,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2427:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2408:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 281,
												"id": 287,
												"nodeType": "Return",
												"src": "2401:34:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2329:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2344:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2328:32:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2382:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2381:9:3"
									},
									"scope": 615,
									"src": "2310:132:3",
									"stateMutability": "view",
									"superFunction": 732,
									"visibility": "public"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "2652:77:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 299,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "2671:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2671:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 301,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "2685:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "2694:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 298,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "2662:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2662:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "2662:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2718:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 297,
												"id": 306,
												"nodeType": "Return",
												"src": "2711:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2597:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2614:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:33:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2646:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2645:6:3"
									},
									"scope": 615,
									"src": "2580:149:3",
									"stateMutability": "nonpayable",
									"superFunction": 741,
									"visibility": "public"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3282:205:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 320,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3302:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 321,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3310:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 322,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3321:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "3292:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3292:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "3292:36:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 326,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3347:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 327,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "3355:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3355:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 336,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "3407:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3415:42:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 329,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "3369:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 331,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 330,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "3381:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3369:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 334,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 332,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "3389:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3389:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3369:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "3369:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3369:89:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3338:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3338:121:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3338:121:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3476:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 318,
												"id": 342,
												"nodeType": "Return",
												"src": "3469:11:3"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3225:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3225:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3244:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3208:51:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3276:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3276:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:6:3"
									},
									"scope": 615,
									"src": "3187:300:3",
									"stateMutability": "nonpayable",
									"superFunction": 752,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "3968:121:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 354,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "3987:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3987:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 356,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "4001:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 364,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 348,
																	"src": "4049:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 357,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "4010:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 360,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 358,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "4022:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4022:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4010:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 362,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 361,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "4036:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4010:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 796,
																"src": "4010:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4010:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 353,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3978:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:83:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "3978:83:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4078:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 352,
												"id": 369,
												"nodeType": "Return",
												"src": "4071:11:3"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "3909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "3926:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3908:37:3"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "3962:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3962:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3961:6:3"
									},
									"scope": 615,
									"src": "3882:207:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "4667:167:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 381,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "4686:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4686:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4700:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 391,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "4748:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4765:39:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 384,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "4709:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 387,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 385,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "4721:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4721:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4709:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 389,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 388,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "4735:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4709:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "4709:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4709:96:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 380,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "4677:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4677:129:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "4677:129:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4823:4:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 379,
												"id": 397,
												"nodeType": "Return",
												"src": "4816:11:3"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "4603:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "4620:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4602:42:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "4661:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4661:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4660:6:3"
									},
									"scope": 615,
									"src": "4576:258:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "5387:385:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 409,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "5405:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5423:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5415:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5415:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5405:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "5397:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "5397:70:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 418,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "5485:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5506:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5498:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5485:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5510:37:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "5477:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:71:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "5477:71:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 426,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5559:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 428,
														"indexExpression": {
															"argumentTypes": null,
															"id": 427,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "5569:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5559:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 433,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5601:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5609:40:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 429,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "5579:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 430,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "5589:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5579:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "5579:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5579:71:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5559:91:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "5559:91:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 438,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5660:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 440,
														"indexExpression": {
															"argumentTypes": null,
															"id": 439,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "5670:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5660:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 445,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5708:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 441,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "5683:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 443,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 442,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "5693:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5683:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 796,
															"src": "5683:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5683:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5660:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "5660:55:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 450,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "5739:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 451,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "5747:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 452,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5758:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5730:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5730:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "EmitStatement",
												"src": "5725:40:3"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5327:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5343:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5343:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5362:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5362:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5326:51:3"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5387:0:3"
									},
									"scope": 615,
									"src": "5308:464:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "6099:245:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 464,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "6117:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6136:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6128:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6128:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6117:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6140:33:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "6109:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "6109:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 472,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "6185:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "6217:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 473,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "6200:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 796,
															"src": "6200:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6200:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6185:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "6185:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 479,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "6234:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 481,
														"indexExpression": {
															"argumentTypes": null,
															"id": 480,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "6244:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6234:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 486,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "6278:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 482,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "6255:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 484,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 483,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "6265:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6255:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 796,
															"src": "6255:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6255:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6234:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "6234:51:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6317:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6309:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6309:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 494,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "6321:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 495,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6330:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "6300:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "EmitStatement",
												"src": "6295:42:3"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "6057:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "6074:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6056:33:3"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6099:0:3"
									},
									"scope": 615,
									"src": "6042:302:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "6720:285:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 507,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "6738:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6757:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6749:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6749:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6738:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6761:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "6730:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6730:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "6730:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "6808:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6818:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6808:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 522,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "6852:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6860:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 518,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "6829:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 520,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 519,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "6839:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6829:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 839,
															"src": "6829:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6829:68:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6808:89:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "6808:89:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 527,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "6907:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 530,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "6939:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 528,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "6922:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 812,
															"src": "6922:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6922:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6907:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "6907:39:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "6970:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6987:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6979:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6979:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 539,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6991:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "6961:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6961:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "EmitStatement",
												"src": "6956:42:3"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6678:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6695:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6695:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6677:33:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6720:0:3"
									},
									"scope": 615,
									"src": "6663:342:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "7505:257:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7523:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7540:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7532:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7523:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7544:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "7515:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7515:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "7515:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 562,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "7601:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7620:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7612:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7612:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7601:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7624:36:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "7593:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 570,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7672:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 573,
															"indexExpression": {
																"argumentTypes": null,
																"id": 571,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "7684:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7672:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 574,
														"indexExpression": {
															"argumentTypes": null,
															"id": 572,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "7691:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7672:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 575,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "7702:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7672:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "7672:36:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 579,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "7732:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 580,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "7739:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7748:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "7723:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7723:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "EmitStatement",
												"src": "7718:37:3"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7448:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7448:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7463:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7463:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7480:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7480:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7447:48:3"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7505:0:3"
									},
									"scope": 615,
									"src": "7430:332:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "8001:168:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 593,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "8017:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 594,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "8026:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 592,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "8011:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8011:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "8011:22:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 598,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "8052:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 599,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "8061:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8061:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 608,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "8114:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8122:38:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	},
																	"value": "ERC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																		"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 601,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "8075:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 603,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 602,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "8087:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8075:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 606,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 604,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "8096:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8096:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8075:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 839,
																"src": "8075:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8075:86:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 597,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8043:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8043:119:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "8043:119:3"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See {_burn} and {_approve}.",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "7959:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "7976:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7976:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7958:33:3"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8001:0:3"
									},
									"scope": 615,
									"src": "7940:229:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 616,
							"src": "1348:6823:3"
						}
					],
					"src": "88:8083:3"
				},
				"id": 3
			},
			"openzeppelin/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "openzeppelin/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							673
						]
					},
					"id": 674,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 617,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "96:23:4"
						},
						{
							"absolutePath": "openzeppelin/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 618,
							"nodeType": "ImportDirective",
							"scope": 674,
							"sourceUnit": 770,
							"src": "121:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 619,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 769,
										"src": "231:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$769",
											"typeString": "contract IERC20"
										}
									},
									"id": 620,
									"nodeType": "InheritanceSpecifier",
									"src": "231:6:4"
								}
							],
							"contractDependencies": [
								769
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 673,
							"linearizedBaseContracts": [
								673,
								769
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 622,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 673,
									"src": "244:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 621,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "244:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 624,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 673,
									"src": "270:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 623,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "270:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 626,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 673,
									"src": "298:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 625,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "298:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "590:85:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 635,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "600:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 636,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "608:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "600:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "600:12:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 639,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "622:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 640,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 630,
														"src": "632:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "622:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "622:16:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 643,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "648:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 644,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "660:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "648:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "648:20:4"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 648,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "525:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "525:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "545:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "545:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "567:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 631,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "567:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "524:58:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:4"
									},
									"scope": 673,
									"src": "512:163:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "792:29:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 653,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 622,
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 652,
												"id": 654,
												"nodeType": "Return",
												"src": "802:12:4"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:4"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "777:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 650,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "777:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:15:4"
									},
									"scope": 673,
									"src": "740:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "988:31:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 661,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 624,
													"src": "1005:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 660,
												"id": 662,
												"nodeType": "Return",
												"src": "998:14:4"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:2:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "973:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"scope": 673,
									"src": "934:85:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "1616:33:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 669,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 626,
													"src": "1633:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 668,
												"id": 670,
												"nodeType": "Return",
												"src": "1626:16:4"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:4"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1609:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 666,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1609:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1608:7:4"
									},
									"scope": 673,
									"src": "1568:81:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 674,
							"src": "205:1446:4"
						}
					],
					"src": "96:1555:4"
				},
				"id": 4
			},
			"openzeppelin/GSN/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							700
						]
					},
					"id": 701,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 675,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "82:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 700,
							"linearizedBaseContracts": [
								700
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "808:3:5",
										"statements": []
									},
									"documentation": null,
									"id": 679,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:5"
									},
									"scope": 700,
									"src": "784:27:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "932:34:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 684,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "949:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "949:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "942:17:5"
											}
										]
									},
									"documentation": null,
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "889:2:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "914:17:5"
									},
									"scope": 700,
									"src": "870:96:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "1029:165:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 693,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1175,
													"src": "1039:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$700",
														"typeString": "contract Context"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "1039:4:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 695,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "1179:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1179:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 692,
												"id": 697,
												"nodeType": "Return",
												"src": "1172:15:5"
											}
										]
									},
									"documentation": null,
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "989:2:5"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1015:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1015:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1014:14:5"
									},
									"scope": 700,
									"src": "972:222:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 701,
							"src": "607:589:5"
						}
					],
					"src": "82:1114:5"
				},
				"id": 5
			},
			"openzeppelin/IERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							769
						]
					},
					"id": 770,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 702,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 769,
							"linearizedBaseContracts": [
								769
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "316:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:6"
									},
									"scope": 769,
									"src": "270:55:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "427:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:6"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "467:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:6"
									},
									"scope": 769,
									"src": "408:68:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "714:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "733:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:6"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "767:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:6"
									},
									"scope": 769,
									"src": "696:77:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1067:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1082:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:6"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "1122:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:6"
									},
									"scope": 769,
									"src": "1048:83:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1801:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1818:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1800:33:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "1852:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:6:6"
									},
									"scope": 769,
									"src": "1784:74:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2187:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2203:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2222:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:51:6"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "2256:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:6"
									},
									"scope": 769,
									"src": "2165:97:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 760,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2446:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2468:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2488:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2445:57:6"
									},
									"src": "2431:72:6"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 768,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2677:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2700:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "2725:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:63:6"
									},
									"src": "2662:78:6"
								}
							],
							"scope": 770,
							"src": "176:2566:6"
						}
					],
					"src": "0:2742:6"
				},
				"id": 6
			},
			"openzeppelin/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "openzeppelin/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							956
						]
					},
					"id": 957,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 771,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 956,
							"linearizedBaseContracts": [
								956
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "985:109:7",
										"statements": [
											{
												"assignments": [
													781
												],
												"declarations": [
													{
														"constant": false,
														"id": 781,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "995:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 780,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "995:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 782,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "1007:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 783,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "1011:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1007:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "995:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 787,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "1030:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 788,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "1035:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1030:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1038:29:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "1022:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1022:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1022:46:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 793,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 781,
													"src": "1086:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 779,
												"id": 794,
												"nodeType": "Return",
												"src": "1079:8:7"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "931:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "942:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "930:22:7"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "976:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "975:9:7"
									},
									"scope": 956,
									"src": "918:176:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "1425:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 806,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1446:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 807,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "1449:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1452:32:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 805,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															812,
															839
														],
														"referencedDeclaration": 839,
														"src": "1442:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1442:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 804,
												"id": 810,
												"nodeType": "Return",
												"src": "1435:50:7"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1371:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1382:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1370:22:7"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "1416:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1415:9:7"
									},
									"scope": 956,
									"src": "1358:134:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "1911:92:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 824,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "1929:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "1934:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1929:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 827,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "1937:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "1921:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "1921:29:7"
											},
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "1960:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1960:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 832,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "1972:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "1976:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1972:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1960:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 836,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 831,
													"src": "1995:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 822,
												"id": 837,
												"nodeType": "Return",
												"src": "1988:8:7"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1829:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1840:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1851:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 817,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1851:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1828:50:7"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1902:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1901:9:7"
									},
									"scope": 956,
									"src": "1816:187:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "2310:392:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 848,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "2542:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2547:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2542:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 854,
												"nodeType": "IfStatement",
												"src": "2538:45:7",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "2550:33:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2571:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 847,
															"id": 852,
															"nodeType": "Return",
															"src": "2564:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "2593:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2593:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 860,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 857,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "2605:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2609:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2605:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2593:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 862,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "2628:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 863,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "2632:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2628:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 865,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "2637:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2628:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2640:35:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "2620:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2620:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "2620:56:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 870,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "2694:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 847,
												"id": 871,
												"nodeType": "Return",
												"src": "2687:8:7"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2256:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2267:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:22:7"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2301:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2300:9:7"
									},
									"scope": 956,
									"src": "2243:459:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "3224:63:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 883,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "3245:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 884,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "3248:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3251:28:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 882,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															889,
															916
														],
														"referencedDeclaration": 916,
														"src": "3241:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 881,
												"id": 887,
												"nodeType": "Return",
												"src": "3234:46:7"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "3170:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "3181:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3169:22:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "3215:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3214:9:7"
									},
									"scope": 956,
									"src": "3157:130:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "3897:243:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "3981:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3985:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3981:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 904,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "3988:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "3973:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "3973:28:7"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "4011:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4011:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 909,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "4023:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 910,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "4027:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4023:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4011:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 913,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 908,
													"src": "4132:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 899,
												"id": 914,
												"nodeType": "Return",
												"src": "4125:8:7"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3815:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3826:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3837:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3837:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3814:50:7"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3888:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3887:9:7"
									},
									"scope": 956,
									"src": "3802:338:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "4651:61:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 926,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "4672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 927,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "4675:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4678:26:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 925,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															932,
															955
														],
														"referencedDeclaration": 955,
														"src": "4668:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 930,
												"nodeType": "Return",
												"src": "4661:44:7"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4597:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4608:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4608:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4596:22:7"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "4642:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4641:9:7"
									},
									"scope": 956,
									"src": "4584:128:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "5311:68:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 944,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "5329:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5334:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5329:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 947,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "5337:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "5321:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5321:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "5321:29:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 950,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "5367:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 951,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "5371:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5367:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 942,
												"id": 953,
												"nodeType": "Return",
												"src": "5360:12:7"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5229:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5240:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5240:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5251:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 937,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5251:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5228:50:7"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "5302:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5302:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5301:9:7"
									},
									"scope": 956,
									"src": "5216:163:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 957,
							"src": "673:4708:7"
						}
					],
					"src": "84:5297:7"
				},
				"id": 7
			},
			"openzeppelin/roles/MinterRole.sol": {
				"ast": {
					"absolutePath": "openzeppelin/roles/MinterRole.sol",
					"exportedSymbols": {
						"MinterRole": [
							1063
						]
					},
					"id": 1064,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 958,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:8"
						},
						{
							"absolutePath": "openzeppelin/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 959,
							"nodeType": "ImportDirective",
							"scope": 1064,
							"sourceUnit": 701,
							"src": "119:28:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin/roles/Roles.sol",
							"file": "./Roles.sol",
							"id": 960,
							"nodeType": "ImportDirective",
							"scope": 1064,
							"sourceUnit": 1145,
							"src": "148:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 961,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 700,
										"src": "194:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$700",
											"typeString": "contract Context"
										}
									},
									"id": 962,
									"nodeType": "InheritanceSpecifier",
									"src": "194:7:8"
								}
							],
							"contractDependencies": [
								700
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1063,
							"linearizedBaseContracts": [
								1063,
								700
							],
							"name": "MinterRole",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 965,
									"libraryName": {
										"contractScope": null,
										"id": 963,
										"name": "Roles",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1144,
										"src": "214:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Roles_$1144",
											"typeString": "library Roles"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "208:27:8",
									"typeName": {
										"contractScope": null,
										"id": 964,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1070,
										"src": "224:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 969,
									"name": "MinterAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "259:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "259:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "258:25:8"
									},
									"src": "241:43:8"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 973,
									"name": "MinterRemoved",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "309:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "308:25:8"
									},
									"src": "289:45:8"
								},
								{
									"constant": false,
									"id": 975,
									"name": "_minters",
									"nodeType": "VariableDeclaration",
									"scope": 1063,
									"src": "340:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$1070_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"contractScope": null,
										"id": 974,
										"name": "Roles.Role",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1070,
										"src": "340:10:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "398:41:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 979,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "419:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "419:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 978,
														"name": "_addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "408:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "408:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "408:24:8"
											}
										]
									},
									"documentation": null,
									"id": 984,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:2:8"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:0:8"
									},
									"scope": 1063,
									"src": "374:65:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "467:111:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 988,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "494:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "494:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 987,
																"name": "isMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "485:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "485:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "509:50:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd",
																"typeString": "literal_string \"MinterRole: caller does not have the Minter role\""
															},
															"value": "MinterRole: caller does not have the Minter role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79ecb50133735b20228dea9d08fe36a462bbc1350f591a146908848db91104cd",
																"typeString": "literal_string \"MinterRole: caller does not have the Minter role\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "477:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "477:83:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "477:83:8"
											},
											{
												"id": 994,
												"nodeType": "PlaceholderStatement",
												"src": "570:1:8"
											}
										]
									},
									"documentation": null,
									"id": 996,
									"name": "onlyMinter",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "464:2:8"
									},
									"src": "445:133:8",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "646:45:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1005,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "676:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1003,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "663:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1070_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "663:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1070_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_Role_$1070_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "663:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1007,
												"nodeType": "Return",
												"src": "656:28:8"
											}
										]
									},
									"documentation": null,
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "602:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "601:17:8"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "640:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "640:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "639:6:8"
									},
									"scope": 1063,
									"src": "584:107:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "751:36:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "772:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1016,
														"name": "_addMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "761:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "761:19:8"
											}
										]
									},
									"documentation": null,
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1014,
											"modifierName": {
												"argumentTypes": null,
												"id": 1013,
												"name": "onlyMinter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 996,
												"src": "740:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "740:10:8"
										}
									],
									"name": "addMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "716:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "715:17:8"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "751:0:8"
									},
									"scope": 1063,
									"src": "697:90:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "826:44:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1025,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "850:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "850:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1024,
														"name": "_removeMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "836:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "836:27:8"
											}
										]
									},
									"documentation": null,
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:8"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:0:8"
									},
									"scope": 1063,
									"src": "793:77:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "922:73:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "945:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1035,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "932:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1070_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1095,
														"src": "932:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1070_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1070_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "932:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "932:21:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "980:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1041,
														"name": "MinterAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "968:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "963:25:8"
											}
										]
									},
									"documentation": null,
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "896:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "895:17:8"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "922:0:8"
									},
									"scope": 1063,
									"src": "876:119:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "1050:78:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1054,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1076:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1051,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "1060:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1070_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "1060:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$1070_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_Role_$1070_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "1060:24:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1058,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1113:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1057,
														"name": "MinterRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "1099:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "EmitStatement",
												"src": "1094:27:8"
											}
										]
									},
									"documentation": null,
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeMinter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "1024:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1023:17:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:0:8"
									},
									"scope": 1063,
									"src": "1001:127:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1064,
							"src": "171:959:8"
						}
					],
					"src": "94:1036:8"
				},
				"id": 8
			},
			"openzeppelin/roles/Roles.sol": {
				"ast": {
					"absolutePath": "openzeppelin/roles/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							1144
						]
					},
					"id": 1145,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1065,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "83:23:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title Roles\n@dev Library for managing addresses assigned to a Role.",
							"fullyImplemented": true,
							"id": 1144,
							"linearizedBaseContracts": [
								1144
							],
							"name": "Roles",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 1070,
									"members": [
										{
											"constant": false,
											"id": 1069,
											"name": "bearer",
											"nodeType": "VariableDeclaration",
											"scope": 1070,
											"src": "233:32:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1068,
												"keyType": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "233:25:9",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "253:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nodeType": "StructDefinition",
									"scope": 1144,
									"src": "211:61:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "401:117:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "419:19:9",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1079,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "424:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1080,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "430:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1078,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "420:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1070_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "420:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "440:33:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															},
															"value": "Roles: account already has role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a",
																"typeString": "literal_string \"Roles: account already has role\""
															}
														],
														"id": 1077,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "411:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "411:63:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "411:63:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1086,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "484:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1069,
															"src": "484:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1090,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1088,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "496:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "484:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "507:4:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "484:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "484:27:9"
											}
										]
									},
									"documentation": "@dev Give an account access to this role.",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "356:17:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 1071,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1070,
													"src": "356:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "375:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "355:36:9"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "401:0:9"
									},
									"scope": 1144,
									"src": "343:175:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "654:119:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1104,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "676:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1105,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "682:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1103,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "672:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$1070_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "672:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "692:35:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															},
															"value": "Roles: account does not have role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257",
																"typeString": "literal_string \"Roles: account does not have role\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "664:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "664:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "664:64:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1110,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "738:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1069,
															"src": "738:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1114,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1112,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "750:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "738:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "761:5:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "738:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "738:28:9"
											}
										]
									},
									"documentation": "@dev Remove an account's access to this role.",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "609:17:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 1096,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1070,
													"src": "609:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "628:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "608:36:9"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:0:9"
									},
									"scope": 1144,
									"src": "593:180:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "940:122:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1129,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "958:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "977:1:9",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "969:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "969:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "958:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "981:36:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															},
															"value": "Roles: account is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f",
																"typeString": "literal_string \"Roles: account is the zero address\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1163
														],
														"referencedDeclaration": 1163,
														"src": "950:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "950:68:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "950:68:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "1035:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1069,
														"src": "1035:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1140,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1139,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "1047:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1035:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1141,
												"nodeType": "Return",
												"src": "1028:27:9"
											}
										]
									},
									"documentation": "@dev Check if an account has this role.\n@return bool",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "875:17:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"contractScope": null,
													"id": 1120,
													"name": "Role",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1070,
													"src": "875:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$1070_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "894:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:36:9"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "934:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "934:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "933:6:9"
									},
									"scope": 1144,
									"src": "862:200:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1145,
							"src": "191:873:9"
						}
					],
					"src": "83:981:9"
				},
				"id": 9
			}
		}
	}
}